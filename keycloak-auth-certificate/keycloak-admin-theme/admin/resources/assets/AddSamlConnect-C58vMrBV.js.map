{"version":3,"file":"AddSamlConnect-C58vMrBV.js","sources":["../../../../../../../src/identity-providers/add/SamlConnectSettings.tsx","../../../../../../../src/identity-providers/add/AddSamlConnect.tsx"],"sourcesContent":["import { fetchWithError } from \"@keycloak/keycloak-admin-client\";\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  FormErrorText,\n  HelpItem,\n  TextControl,\n  useEnvironment,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { FormGroup, Title } from \"@patternfly/react-core\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { useAdminClient } from \"../../admin-client\";\nimport { FileUploadForm } from \"../../components/json-file-upload/FileUploadForm\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport type { Environment } from \"../../environment\";\nimport { addTrailingSlash } from \"../../util\";\nimport { getAuthorizationHeaders } from \"../../utils/getAuthorizationHeaders\";\nimport { DiscoveryEndpointField } from \"../component/DiscoveryEndpointField\";\nimport { DescriptorSettings } from \"./DescriptorSettings\";\n\ntype FormFields = IdentityProviderRepresentation & {\n  discoveryError: string;\n};\n\nexport const SamlConnectSettings = () => {\n  const { adminClient } = useAdminClient();\n  const { environment } = useEnvironment<Environment>();\n\n  const { t } = useTranslation();\n  const id = \"saml\";\n\n  const { realm } = useRealm();\n  const {\n    setValue,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useFormContext<FormFields>();\n\n  const setupForm = (result: IdentityProviderRepresentation) => {\n    Object.entries(result).map(([key, value]) =>\n      setValue(`config.${key}`, value),\n    );\n  };\n\n  const fileUpload = async (xml: string) => {\n    clearErrors(\"discoveryError\");\n    if (!xml) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"providerId\", id);\n    formData.append(\"file\", new Blob([xml]));\n\n    try {\n      const response = await fetchWithError(\n        `${addTrailingSlash(\n          adminClient.baseUrl,\n        )}admin/realms/${realm}/identity-provider/import-config`,\n        {\n          method: \"POST\",\n          body: formData,\n          headers: getAuthorizationHeaders(await adminClient.getAccessToken()),\n        },\n      );\n      if (response.ok) {\n        const result = await response.json();\n        setupForm(result);\n      } else {\n        setError(\"discoveryError\", {\n          type: \"manual\",\n          message: response.statusText,\n        });\n      }\n    } catch (error) {\n      setError(\"discoveryError\", {\n        type: \"manual\",\n        message: (error as Error).message,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"kc-form-panel__title\">\n        {t(\"samlSettings\")}\n      </Title>\n\n      <TextControl\n        name=\"config.entityId\"\n        label={t(\"serviceProviderEntityId\")}\n        labelIcon={t(\"serviceProviderEntityIdHelp\")}\n        defaultValue={`${environment.serverBaseUrl}/realms/${realm}`}\n        rules={{\n          required: t(\"required\"),\n        }}\n      />\n\n      <DiscoveryEndpointField\n        id=\"saml\"\n        fileUpload={\n          <FormGroup\n            label={t(\"importConfig\")}\n            fieldId=\"kc-import-config\"\n            labelIcon={\n              <HelpItem\n                helpText={t(\"importConfigHelp\")}\n                fieldLabelId=\"importConfig\"\n              />\n            }\n          >\n            <FileUploadForm\n              id=\"kc-import-config\"\n              extension=\".xml\"\n              hideDefaultPreview\n              unWrap\n              validated={errors.discoveryError ? \"error\" : \"default\"}\n              onChange={(value) => fileUpload(value)}\n            />\n            {errors.discoveryError && (\n              <FormErrorText\n                message={errors.discoveryError.message as string}\n              />\n            )}\n          </FormGroup>\n        }\n      >\n        {(readonly) => <DescriptorSettings readOnly={readonly} />}\n      </DiscoveryEndpointField>\n    </>\n  );\n};\n","import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { SamlConnectSettings } from \"./SamlConnectSettings\";\nimport { SamlGeneralSettings } from \"./SamlGeneralSettings\";\n\ntype DiscoveryIdentityProvider = IdentityProviderRepresentation & {\n  discoveryEndpoint?: string;\n};\n\nexport default function AddSamlConnect() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const id = \"saml\";\n\n  const form = useForm<DiscoveryIdentityProvider>({\n    defaultValues: { alias: id, config: { allowCreate: \"true\" } },\n    mode: \"onChange\",\n  });\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { addAlert, addError } = useAlerts();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: DiscoveryIdentityProvider) => {\n    delete provider.discoveryEndpoint;\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId: id,\n      });\n      addAlert(t(\"createIdentityProviderSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId: id,\n          alias: provider.alias!,\n          tab: \"settings\",\n        }),\n      );\n    } catch (error: any) {\n      addError(\"createIdentityProviderError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader titleKey={t(\"addSamlProvider\")} />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            role=\"manage-identity-providers\"\n            isHorizontal\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <SamlGeneralSettings />\n            <SamlConnectSettings />\n            <ActionGroup>\n              <Button\n                isDisabled={!isDirty}\n                variant=\"primary\"\n                type=\"submit\"\n                data-testid=\"createProvider\"\n              >\n                {t(\"add\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                data-testid=\"cancel\"\n                component={(props) => (\n                  <Link {...props} to={toIdentityProviders({ realm })} />\n                )}\n              >\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["SamlConnectSettings","adminClient","useAdminClient","environment","useEnvironment","useTranslation","id","realm","useRealm","setValue","setError","clearErrors","errors","useFormContext","setupForm","result","key","value","fileUpload","xml","formData","response","fetchWithError","addTrailingSlash","getAuthorizationHeaders","error","jsxs","Fragment","jsx","Title","TextControl","DiscoveryEndpointField","FormGroup","HelpItem","FileUploadForm","FormErrorText","readonly","DescriptorSettings","AddSamlConnect","t","navigate","useNavigate","form","useForm","handleSubmit","isDirty","addAlert","addError","useAlerts","onSubmit","provider","AlertVariant","toIdentityProvider","ViewHeader","PageSection","FormProvider","FormAccess","SamlGeneralSettings","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"uyBAyBO,MAAMA,EAAsB,IAAM,CACjC,KAAA,CAAE,YAAAC,GAAgBC,IAClB,CAAE,YAAAC,GAAgBC,IAElB,CAAE,GAAMC,IACRC,EAAK,OAEL,CAAE,MAAAC,GAAUC,IACZ,CACJ,SAAAC,EACA,SAAAC,EACA,YAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,EAA2B,EAEzBC,EAAaC,GAA2C,CACrD,OAAA,QAAQA,CAAM,EAAE,IAAI,CAAC,CAACC,EAAKC,CAAK,IACrCR,EAAS,UAAUO,CAAG,GAAIC,CAAK,CAAA,CACjC,EAGIC,EAAa,MAAOC,GAAgB,CAExC,GADAR,EAAY,gBAAgB,EACxB,CAACQ,EACH,OAEI,MAAAC,EAAW,IAAI,SACZA,EAAA,OAAO,aAAcd,CAAE,EAChCc,EAAS,OAAO,OAAQ,IAAI,KAAK,CAACD,CAAG,CAAC,CAAC,EAEnC,GAAA,CACF,MAAME,EAAW,MAAMC,EACrB,GAAGC,EACDtB,EAAY,OAAA,CACb,gBAAgBM,CAAK,mCACtB,CACE,OAAQ,OACR,KAAMa,EACN,QAASI,EAAwB,MAAMvB,EAAY,gBAAgB,CACrE,CAAA,EAEF,GAAIoB,EAAS,GAAI,CACT,MAAAN,EAAS,MAAMM,EAAS,OAC9BP,EAAUC,CAAM,CAAA,MAEhBL,EAAS,iBAAkB,CACzB,KAAM,SACN,QAASW,EAAS,UAAA,CACnB,QAEII,EAAO,CACdf,EAAS,iBAAkB,CACzB,KAAM,SACN,QAAUe,EAAgB,OAAA,CAC3B,CACH,CAAA,EAGF,OAEIC,EAAAC,EAAA,CAAA,SAAA,CAACC,EAAAC,EAAA,CAAM,aAAa,KAAK,KAAK,KAAK,UAAU,uBAC1C,SAAE,EAAA,cAAc,CACnB,CAAA,EAEAD,EAACE,EAAA,CACC,KAAK,kBACL,MAAO,EAAE,yBAAyB,EAClC,UAAW,EAAE,6BAA6B,EAC1C,aAAc,GAAG3B,EAAY,aAAa,WAAWI,CAAK,GAC1D,MAAO,CACL,SAAU,EAAE,UAAU,CACxB,CAAA,CACF,EAEAqB,EAACG,EAAA,CACC,GAAG,OACH,WACEL,EAACM,EAAA,CACC,MAAO,EAAE,cAAc,EACvB,QAAQ,mBACR,UACEJ,EAACK,EAAA,CACC,SAAU,EAAE,kBAAkB,EAC9B,aAAa,cAAA,CACf,EAGF,SAAA,CAAAL,EAACM,EAAA,CACC,GAAG,mBACH,UAAU,OACV,mBAAkB,GAClB,OAAM,GACN,UAAWtB,EAAO,eAAiB,QAAU,UAC7C,SAAWK,GAAUC,EAAWD,CAAK,CAAA,CACvC,EACCL,EAAO,gBACNgB,EAACO,EAAA,CACC,QAASvB,EAAO,eAAe,OAAA,CACjC,CAAA,CAAA,CAEJ,EAGD,SAACwB,GAAcR,EAAAS,EAAA,CAAmB,SAAUD,EAAU,CAAA,CACzD,CACF,CAAA,CAAA,CAEJ,EC5GA,SAAwBE,IAAiB,CACjC,KAAA,CAAE,YAAArC,GAAgBC,IAElB,CAAE,EAAAqC,GAAMlC,IACRmC,EAAWC,IACXnC,EAAK,OAELoC,EAAOC,EAAmC,CAC9C,cAAe,CAAE,MAAOrC,EAAI,OAAQ,CAAE,YAAa,OAAS,EAC5D,KAAM,UAAA,CACP,EACK,CACJ,aAAAsC,EACA,UAAW,CAAE,QAAAC,CAAQ,CACnB,EAAAH,EAEE,CAAE,SAAAI,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnC,CAAE,MAAAzC,GAAUC,IAEZyC,EAAW,MAAOC,GAAwC,CAC9D,OAAOA,EAAS,kBACZ,GAAA,CACI,MAAAjD,EAAY,kBAAkB,OAAO,CACzC,GAAGiD,EACH,WAAY5C,CAAA,CACb,EACDwC,EAASP,EAAE,+BAA+B,EAAGY,EAAa,OAAO,EACjEX,EACEY,EAAmB,CACjB,MAAA7C,EACA,WAAYD,EACZ,MAAO4C,EAAS,MAChB,IAAK,UAAA,CACN,CAAA,QAEIzB,EAAY,CACnBsB,EAAS,8BAA+BtB,CAAK,CAC/C,CAAA,EAGF,OAEIC,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACyB,EAAW,CAAA,SAAUd,EAAE,iBAAiB,CAAG,CAAA,IAC3Ce,EAAY,CAAA,QAAQ,QACnB,SAAC1B,EAAA2B,EAAA,CAAc,GAAGb,EAChB,SAAAhB,EAAC8B,EAAA,CACC,KAAK,4BACL,aAAY,GACZ,SAAUZ,EAAaK,CAAQ,EAE/B,SAAA,CAAArB,EAAC6B,EAAoB,EAAA,IACpBzD,EAAoB,EAAA,IACpB0D,EACC,CAAA,SAAA,CAAA9B,EAAC+B,EAAA,CACC,WAAY,CAACd,EACb,QAAQ,UACR,KAAK,SACL,cAAY,iBAEX,WAAE,KAAK,CAAA,CACV,EACAjB,EAAC+B,EAAA,CACC,QAAQ,OACR,cAAY,SACZ,UAAYC,GACVhC,EAACiC,EAAM,CAAA,GAAGD,EAAO,GAAIE,EAAoB,CAAE,MAAAvD,CAAM,CAAC,CAAG,CAAA,EAGtD,WAAE,QAAQ,CAAA,CACb,CAAA,EACF,CAAA,CAAA,GAEJ,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}