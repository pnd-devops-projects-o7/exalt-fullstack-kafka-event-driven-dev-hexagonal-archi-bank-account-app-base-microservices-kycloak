{"version":3,"file":"DetailProvider-Dyi0LUh9.js","sources":["../../../../../../../src/clients/registration/DetailProvider.tsx"],"sourcesContent":["import ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport ComponentTypeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentTypeRepresentation\";\nimport { TextControl, useAlerts, useFetch } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { DynamicComponents } from \"../../components/dynamic/DynamicComponents\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { KeycloakSpinner } from \"@keycloak/keycloak-ui-shared\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useParams } from \"../../utils/useParams\";\nimport {\n  RegistrationProviderParams,\n  toRegistrationProvider,\n} from \"../routes/AddRegistrationProvider\";\nimport { toClientRegistration } from \"../routes/ClientRegistration\";\n\nexport default function DetailProvider() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const { id, providerId, subTab } = useParams<RegistrationProviderParams>();\n  const navigate = useNavigate();\n  const form = useForm<ComponentRepresentation>({\n    defaultValues: { providerId },\n  });\n  const { control, handleSubmit, reset } = form;\n\n  const { realm, realmRepresentation } = useRealm();\n  const { addAlert, addError } = useAlerts();\n  const [provider, setProvider] = useState<ComponentTypeRepresentation>();\n\n  useFetch(\n    async () =>\n      await Promise.all([\n        adminClient.realms.getClientRegistrationPolicyProviders({ realm }),\n        id ? adminClient.components.findOne({ id }) : Promise.resolve(),\n      ]),\n    ([providers, data]) => {\n      setProvider(providers.find((p) => p.id === providerId));\n      reset(data || { providerId });\n    },\n    [],\n  );\n\n  const providerName = useWatch({ control, defaultValue: \"\", name: \"name\" });\n\n  const onSubmit = async (component: ComponentRepresentation) => {\n    if (component.config)\n      Object.entries(component.config).forEach(\n        ([key, value]) =>\n          (component.config![key] = Array.isArray(value) ? value : [value]),\n      );\n    try {\n      const updatedComponent = {\n        ...component,\n        subType: subTab,\n        parentId: realmRepresentation?.id,\n        providerType:\n          \"org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy\",\n        providerId,\n      };\n      if (id) {\n        await adminClient.components.update({ id }, updatedComponent);\n      } else {\n        const { id } = await adminClient.components.create(updatedComponent);\n        navigate(toRegistrationProvider({ id, realm, subTab, providerId }));\n      }\n      addAlert(t(`provider${id ? \"Updated\" : \"Create\"}Success`));\n    } catch (error) {\n      addError(`provider${id ? \"Updated\" : \"Create\"}Error`, error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"clientRegisterPolicyDeleteConfirmTitle\",\n    messageKey: t(\"clientRegisterPolicyDeleteConfirm\", {\n      name: providerName,\n    }),\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.components.del({\n          realm,\n          id: id!,\n        });\n        addAlert(t(\"clientRegisterPolicyDeleteSuccess\"));\n        navigate(toClientRegistration({ realm, subTab }));\n      } catch (error) {\n        addError(\"clientRegisterPolicyDeleteError\", error);\n      }\n    },\n  });\n\n  if (!provider) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={id ? providerName! : \"createPolicy\"}\n        subKey={id}\n        dropdownItems={\n          id\n            ? [\n                <DropdownItem\n                  data-testid=\"delete\"\n                  key=\"delete\"\n                  onClick={toggleDeleteDialog}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <DeleteConfirm />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            role=\"manage-clients\"\n            isHorizontal\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextControl name=\"providerId\" label={t(\"provider\")} readOnly />\n            <TextControl\n              name=\"name\"\n              label={t(\"name\")}\n              labelIcon={t(\"clientPolicyNameHelp\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <DynamicComponents properties={provider.properties} />\n            <ActionGroup>\n              <Button data-testid=\"save\" type=\"submit\">\n                {t(\"save\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                component={(props) => (\n                  <Link\n                    {...props}\n                    to={toClientRegistration({ realm, subTab })}\n                  ></Link>\n                )}\n              >\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["DetailProvider","adminClient","useAdminClient","useTranslation","id","providerId","subTab","useParams","navigate","useNavigate","form","useForm","control","handleSubmit","reset","realm","realmRepresentation","useRealm","addAlert","addError","useAlerts","provider","setProvider","useState","useFetch","providers","data","p","providerName","useWatch","onSubmit","component","key","value","updatedComponent","toRegistrationProvider","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","toClientRegistration","jsxs","Fragment","jsx","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","TextControl","DynamicComponents","ActionGroup","Button","props","Link","KeycloakSpinner"],"mappings":"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"}