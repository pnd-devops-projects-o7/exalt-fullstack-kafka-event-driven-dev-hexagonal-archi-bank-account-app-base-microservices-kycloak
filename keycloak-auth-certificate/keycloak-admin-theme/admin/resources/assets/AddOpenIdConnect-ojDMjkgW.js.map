{"version":3,"file":"AddOpenIdConnect-ojDMjkgW.js","sources":["../../../../../../../src/identity-providers/add/OpenIdConnectSettings.tsx","../../../../../../../src/identity-providers/add/AddOpenIdConnect.tsx"],"sourcesContent":["import { FormGroup, Title } from \"@patternfly/react-core\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormErrorText, HelpItem } from \"@keycloak/keycloak-ui-shared\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { JsonFileUpload } from \"../../components/json-file-upload/JsonFileUpload\";\nimport { DiscoveryEndpointField } from \"../component/DiscoveryEndpointField\";\nimport { DiscoverySettings } from \"./DiscoverySettings\";\n\nexport const OpenIdConnectSettings = () => {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const id = \"oidc\";\n\n  const {\n    setValue,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useFormContext();\n\n  const setupForm = (result: any) => {\n    Object.keys(result).map((k) => setValue(`config.${k}`, result[k]));\n  };\n\n  const fileUpload = async (obj?: object) => {\n    clearErrors(\"discoveryError\");\n    if (!obj) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"providerId\", id);\n    formData.append(\"file\", new Blob([JSON.stringify(obj)]));\n\n    try {\n      const result =\n        await adminClient.identityProviders.importFromUrl(formData);\n      setupForm(result);\n    } catch (error) {\n      setError(\"discoveryError\", {\n        type: \"manual\",\n        message: (error as Error).message,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"kc-form-panel__title\">\n        {t(\"oidcSettings\")}\n      </Title>\n\n      <DiscoveryEndpointField\n        id=\"oidc\"\n        fileUpload={\n          <FormGroup\n            label={t(\"importConfig\")}\n            fieldId=\"kc-import-config\"\n            labelIcon={\n              <HelpItem\n                helpText={t(\"importConfigHelp\")}\n                fieldLabelId=\"importConfig\"\n              />\n            }\n          >\n            <JsonFileUpload\n              id=\"kc-import-config\"\n              helpText={t(\"identity=providers-help:jsonFileUpload\")}\n              hideDefaultPreview\n              unWrap\n              validated={errors.discoveryError ? \"error\" : \"default\"}\n              onChange={(value) => fileUpload(value)}\n            />\n            {errors.discoveryError && (\n              <FormErrorText\n                message={errors.discoveryError.message as string}\n              />\n            )}\n          </FormGroup>\n        }\n      >\n        {(readonly) => <DiscoverySettings readOnly={readonly} />}\n      </DiscoveryEndpointField>\n    </>\n  );\n};\n","import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { OIDCAuthentication } from \"./OIDCAuthentication\";\nimport { OIDCGeneralSettings } from \"./OIDCGeneralSettings\";\nimport { OpenIdConnectSettings } from \"./OpenIdConnectSettings\";\n\ntype DiscoveryIdentity = IdentityProviderRepresentation & {\n  discoveryEndpoint?: string;\n};\n\nexport default function AddOpenIdConnect() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const isKeycloak = pathname.includes(\"keycloak-oidc\");\n  const id = `${isKeycloak ? \"keycloak-\" : \"\"}oidc`;\n\n  const form = useForm<IdentityProviderRepresentation>({\n    defaultValues: { alias: id },\n    mode: \"onChange\",\n  });\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { addAlert, addError } = useAlerts();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: DiscoveryIdentity) => {\n    delete provider.discoveryEndpoint;\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId: id,\n      });\n      addAlert(t(\"createIdentityProviderSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId: id,\n          alias: provider.alias!,\n          tab: \"settings\",\n        }),\n      );\n    } catch (error) {\n      addError(\"createIdentityProviderError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={t(\n          isKeycloak ? \"addKeycloakOpenIdProvider\" : \"addOpenIdProvider\",\n        )}\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            role=\"manage-identity-providers\"\n            isHorizontal\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <OIDCGeneralSettings />\n            <OpenIdConnectSettings />\n            <OIDCAuthentication />\n            <ActionGroup>\n              <Button\n                isDisabled={!isDirty}\n                variant=\"primary\"\n                type=\"submit\"\n                data-testid=\"createProvider\"\n              >\n                {t(\"add\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                data-testid=\"cancel\"\n                component={(props) => (\n                  <Link {...props} to={toIdentityProviders({ realm })} />\n                )}\n              >\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["OpenIdConnectSettings","adminClient","useAdminClient","useTranslation","id","setValue","setError","clearErrors","errors","useFormContext","setupForm","result","k","fileUpload","obj","formData","error","jsxs","Fragment","jsx","Title","DiscoveryEndpointField","FormGroup","HelpItem","JsonFileUpload","value","FormErrorText","readonly","DiscoverySettings","AddOpenIdConnect","navigate","useNavigate","pathname","useLocation","isKeycloak","form","useForm","handleSubmit","isDirty","addAlert","addError","useAlerts","realm","useRealm","onSubmit","provider","AlertVariant","toIdentityProvider","ViewHeader","PageSection","FormProvider","FormAccess","OIDCGeneralSettings","OIDCAuthentication","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"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"}