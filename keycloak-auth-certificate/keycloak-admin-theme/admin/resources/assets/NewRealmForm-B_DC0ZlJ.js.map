{"version":3,"file":"NewRealmForm-B_DC0ZlJ.js","sources":["../../../../../../../src/realm/add/NewRealmForm.tsx"],"sourcesContent":["import type RealmRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/realmRepresentation\";\nimport { ActionGroup, Button, PageSection } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormSubmitButton, TextControl } from \"@keycloak/keycloak-ui-shared\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { DefaultSwitchControl } from \"../../components/SwitchControl\";\nimport { useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { JsonFileUpload } from \"../../components/json-file-upload/JsonFileUpload\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useWhoAmI } from \"../../context/whoami/WhoAmI\";\nimport { toDashboard } from \"../../dashboard/routes/Dashboard\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\n\nexport default function NewRealmForm() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { refresh, whoAmI } = useWhoAmI();\n  const { addAlert, addError } = useAlerts();\n  const [realm, setRealm] = useState<RealmRepresentation>();\n\n  const form = useForm<RealmRepresentation>({\n    mode: \"onChange\",\n  });\n\n  const { handleSubmit, setValue, formState } = form;\n\n  const handleFileChange = (obj?: object) => {\n    const defaultRealm = { id: \"\", realm: \"\", enabled: true };\n    convertToFormValues(obj || defaultRealm, setValue);\n    setRealm(obj || defaultRealm);\n  };\n\n  const save = async (fields: RealmRepresentation) => {\n    try {\n      await adminClient.realms.create({\n        ...realm,\n        ...convertFormValuesToObject(fields),\n      });\n      addAlert(t(\"saveRealmSuccess\"));\n\n      refresh();\n      navigate(toDashboard({ realm: fields.realm }));\n    } catch (error) {\n      addError(\"saveRealmError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader titleKey=\"createRealm\" subKey=\"realmExplain\" />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            onSubmit={handleSubmit(save)}\n            role=\"view-realm\"\n            isReadOnly={!whoAmI.canCreateRealm()}\n          >\n            <JsonFileUpload\n              id=\"kc-realm-filename\"\n              allowEditingUploadedText\n              onChange={handleFileChange}\n            />\n            <TextControl\n              name=\"realm\"\n              label={t(\"realmNameField\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <DefaultSwitchControl\n              name=\"enabled\"\n              label={t(\"enabled\")}\n              defaultValue={true}\n            />\n            <ActionGroup>\n              <FormSubmitButton\n                formState={formState}\n                allowInvalid\n                allowNonDirty\n              >\n                {t(\"create\")}\n              </FormSubmitButton>\n              <Button variant=\"link\" onClick={() => navigate(-1)}>\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["NewRealmForm","adminClient","useAdminClient","t","useTranslation","navigate","useNavigate","refresh","whoAmI","useWhoAmI","addAlert","addError","useAlerts","realm","setRealm","useState","form","useForm","handleSubmit","setValue","formState","handleFileChange","obj","defaultRealm","convertToFormValues","jsxs","Fragment","jsx","ViewHeader","PageSection","FormProvider","FormAccess","fields","convertFormValuesToObject","toDashboard","error","JsonFileUpload","TextControl","DefaultSwitchControl","ActionGroup","FormSubmitButton","Button"],"mappings":"ikBAiBA,SAAwBA,GAAe,CAC/B,KAAA,CAAE,YAAAC,GAAgBC,IAElB,CAAE,EAAAC,GAAMC,IACRC,EAAWC,IACX,CAAE,QAAAC,EAAS,OAAAC,CAAO,EAAIC,EAAU,EAChC,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnC,CAACC,EAAOC,CAAQ,EAAIC,EAA8B,EAElDC,EAAOC,EAA6B,CACxC,KAAM,UAAA,CACP,EAEK,CAAE,aAAAC,EAAc,SAAAC,EAAU,UAAAC,CAAA,EAAcJ,EAExCK,EAAoBC,GAAiB,CACzC,MAAMC,EAAe,CAAE,GAAI,GAAI,MAAO,GAAI,QAAS,IAC/BC,EAAAF,GAAOC,EAAcJ,CAAQ,EACjDL,EAASQ,GAAOC,CAAY,CAAA,EAkB9B,OAEIE,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAW,CAAA,SAAS,cAAc,OAAO,eAAe,IACxDC,EAAY,CAAA,QAAQ,QACnB,SAACF,EAAAG,EAAA,CAAc,GAAGd,EAChB,SAAAS,EAACM,EAAA,CACC,aAAY,GACZ,SAAUb,EAtBP,MAAOc,GAAgC,CAC9C,GAAA,CACI,MAAA/B,EAAY,OAAO,OAAO,CAC9B,GAAGY,EACH,GAAGoB,EAA0BD,CAAM,CAAA,CACpC,EACQtB,EAAAP,EAAE,kBAAkB,CAAC,EAEtBI,IACRF,EAAS6B,EAAY,CAAE,MAAOF,EAAO,KAAO,CAAA,CAAC,QACtCG,EAAO,CACdxB,EAAS,iBAAkBwB,CAAK,CAClC,CAAA,CAUmC,EAC3B,KAAK,aACL,WAAY,CAAC3B,EAAO,eAAe,EAEnC,SAAA,CAAAmB,EAACS,EAAA,CACC,GAAG,oBACH,yBAAwB,GACxB,SAAUf,CAAA,CACZ,EACAM,EAACU,EAAA,CACC,KAAK,QACL,MAAOlC,EAAE,gBAAgB,EACzB,MAAO,CAAE,SAAUA,EAAE,UAAU,CAAE,CAAA,CACnC,EACAwB,EAACW,EAAA,CACC,KAAK,UACL,MAAOnC,EAAE,SAAS,EAClB,aAAc,EAAA,CAChB,IACCoC,EACC,CAAA,SAAA,CAAAZ,EAACa,EAAA,CACC,UAAApB,EACA,aAAY,GACZ,cAAa,GAEZ,WAAE,QAAQ,CAAA,CACb,EACAO,EAACc,EAAO,CAAA,QAAQ,OAAO,QAAS,IAAMpC,EAAS,EAAE,EAC9C,SAAEF,EAAA,QAAQ,CACb,CAAA,CAAA,EACF,CAAA,CAAA,GAEJ,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}