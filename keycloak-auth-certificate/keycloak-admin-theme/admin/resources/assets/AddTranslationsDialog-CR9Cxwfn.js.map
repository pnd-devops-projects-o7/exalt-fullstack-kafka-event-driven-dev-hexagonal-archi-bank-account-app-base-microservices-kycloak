{"version":3,"file":"AddTranslationsDialog-CR9Cxwfn.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-icons@5.4.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-icons/dist/esm/icons/globe-route-icon.js","../../../../../../../src/realm-settings/user-profile/attribute/AddTranslationsDialog.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const GlobeRouteIconConfig = {\n  name: 'GlobeRouteIcon',\n  height: 1024,\n  width: 1306,\n  svgPath: 'M1300.9,363.7 L1179,485.8 C1169,495.9 1151.7,488.8 1151.7,474.5 L1151.7,416 L816.4,416 C812.4,416 809,413.8 808.5,409.8 C805.3,386 801,362.733333 795.6,340 C792.3,326 788.5,312.4 784.4,299.2 C782.8,294 786.6,288 792,288 L1151.5,288 L1151.5,230.6 C1151.5,216.4 1168.7,209.2 1178.8,219.3 L1300.8,341 C1303.9,344.1 1306,348.2 1306,352.3 C1306,356.4 1303.9,360.5 1300.9,363.7 Z M469.2,746.7 L347.3,868.8 C337.3,878.9 320,871.8 320,857.5 L320,800 L16,800 C7.2,800 0,792.3 0,783.5 L0,687.5 C0,678.7 7.2,672 16,672 L320,672 L320,613.8 C320,599.6 337.2,592.4 347.3,602.5 L469.2,724.1 C475.430133,730.34524 475.430133,740.45476 469.2,746.7 Z M1087.6,495.6 C1087.38293,486.920039 1080.28267,479.997286 1071.6,480 L640,480 L640,352 L722.2,352 C727.4,352 731.3,346.5 729.9,341.5 C725.605596,325.013205 720.465463,308.75837 714.5,292.8 C713.258024,289.782121 710.260604,287.863772 707,288 L640,288 L640,101.7 C652.442178,106.259896 664.111225,112.70148 674.6,120.8 C699.3,139.4 723,168.1 743.1,203.9 C746.5,210 751.7,218.7 761.1,218.7 L809.4,218.7 C812.128705,218.672447 814.65964,217.271114 816.131205,214.973053 C817.602771,212.674992 817.816638,209.789922 816.7,207.3 C804.114384,179.721505 788.769504,153.487791 770.9,129 C818.290474,149.304728 861.543068,178.15109 898.5,214.1 C901.47783,216.980555 905.45693,218.593703 909.6,218.6 L971.4,218.6 C974.505675,218.614157 977.338903,216.829582 978.667492,214.022401 C979.996082,211.21522 979.579921,207.892766 977.6,205.5 C889.8,100 757.8,32.6 609.9,32 L605.5,32 C342.5,33.4 128,251.4 128,514.8 L128,528 C128,538.8 132.7,582.4 136.2,601 C136.9,604.8 140.2,608 144.1,608 L193,608 C198.1,608 201.9,602.8 200.8,597.8 C197.100285,580.050867 194.561569,562.079428 193.2,544 L576,544 L576,672 L533.4,672 C530.21925,671.879321 527.2913,673.725708 526.029429,676.647935 C524.767558,679.570163 525.43119,682.96746 527.7,685.2 L566.6,724.2 C572.610093,730.186212 575.992058,738.317319 576,746.8 L576,922.3 C563.557822,917.740104 551.888775,911.29852 541.4,903.2 C521.8,888.5 502.9,867.3 485.8,841.4 C484.483494,839.398843 482.339547,838.092908 479.95744,837.84114 C477.575334,837.589373 475.205755,838.418269 473.5,840.1 L438.9,874.7 C436.17839,877.437565 435.799809,881.728158 438,884.9 C440.4,888.3 442.8,891.7 445.2,895 C440.7,893.1 436.3,891.1 431.9,889.1 C428.86068,887.698101 425.269908,888.336461 422.9,890.7 L387,926.5 C385.206339,928.31874 384.380991,930.880062 384.775333,933.403854 C385.169676,935.927646 386.737022,938.11511 389,939.3 C456.763878,974.049946 531.84563,992.117563 608,992.00057 C862.3,992.00057 1070.5,794.3 1087,544.1 C1087.7,533.5 1088,522.9 1088,512.1 L1087.6,495.6 Z M338.6,480 L193.2,480 C196.476568,435.937781 206.913411,392.704253 224.1,352 L353.5,352 C345.141453,394.203188 340.159019,437.005305 338.6,480 L338.6,480 Z M257.8,288 C273.983601,262.695367 292.787318,239.165581 313.9,217.8 C351.55,180.03315 396.130875,149.88249 445.2,129 C413.9,171.2 387.8,225.9 369.3,288 L257.8,288 Z M576,480 L402.6,480 C404.246384,436.941681 409.667166,394.110815 418.8,352 L576,352 L576,480 Z M576,288 L436.4,288 C446.6,257.5 458.8,229.1 472.9,204 C493,168.2 516.7,139.5 541.4,120.9 C551.888775,112.80148 563.557822,106.359896 576,101.8 L576,288 Z M575.8,87.6 L576.7,87.6 L576.7,86.7 L575.8,86.7 L575.8,87.6 Z M640,544 L813.4,544 C811.819116,587.052386 806.465269,629.883162 797.4,672 L640,672 L640,544 Z M674.6,903.1 C664.111225,911.19852 652.442178,917.640104 640,922.2 L640,736 L779.9,736 C770.41424,765.137744 758.088355,793.272917 743.1,820 C723,855.8 699.3,884.6 674.6,903.1 L674.6,903.1 Z M902.2,806.2 C864.55,843.96685 819.969125,874.11751 770.9,895 C802.3,852.5 828.4,798.1 847,735.5 L959,735.5 C942.666041,761.042003 923.622375,784.746003 902.2,806.2 L902.2,806.2 Z M992.3,671.5 L862.7,671.5 C870.9358,629.451226 875.850963,586.819718 877.4,544 L1022.8,544 C1019.55195,587.863016 1009.25313,630.915455 992.3,671.5 L992.3,671.5 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const GlobeRouteIcon = createIcon(GlobeRouteIconConfig);\n\nexport default GlobeRouteIcon;","import {\n  PaginatingTableToolbar,\n  TextControl,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Form,\n  FormGroup,\n  Label,\n  Modal,\n  ModalVariant,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../../admin-client\";\nimport { ListEmptyState } from \"@keycloak/keycloak-ui-shared\";\nimport { useRealm } from \"../../../context/realm-context/RealmContext\";\nimport { useWhoAmI } from \"../../../context/whoami/WhoAmI\";\nimport { localeToDisplayName } from \"../../../util\";\nimport useLocale from \"../../../utils/useLocale\";\n\nexport type TranslationsType =\n  | \"displayName\"\n  | \"displayHeader\"\n  | \"displayDescription\";\n\ntype TranslationForm = {\n  locale: string;\n  value: string;\n};\n\ntype Translations = {\n  key: string;\n  translations: TranslationForm[];\n};\n\nexport type AddTranslationsDialogProps = {\n  translationKey: string;\n  translations: Translations;\n  type: TranslationsType;\n  onCancel: () => void;\n  toggleDialog: () => void;\n  onTranslationsAdded: (translations: Translations) => void;\n};\n\nexport const AddTranslationsDialog = ({\n  translationKey,\n  translations,\n  type,\n  onCancel,\n  toggleDialog,\n  onTranslationsAdded,\n}: AddTranslationsDialogProps) => {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const { realm: realmName, realmRepresentation: realm } = useRealm();\n  const combinedLocales = useLocale();\n  const { whoAmI } = useWhoAmI();\n  const [max, setMax] = useState(10);\n  const [first, setFirst] = useState(0);\n  const [filter, setFilter] = useState(\"\");\n  const [defaultTranslations, setDefaultTranslations] = useState<{\n    [key: string]: string;\n  }>({});\n\n  const form = useForm<{\n    key: string;\n    translations: TranslationForm[];\n  }>({\n    mode: \"onChange\",\n  });\n\n  const {\n    getValues,\n    handleSubmit,\n    setValue,\n    formState: { isValid },\n  } = form;\n\n  const defaultLocales = useMemo(() => {\n    return realm?.defaultLocale!.length ? [realm.defaultLocale] : [];\n  }, [realm]);\n\n  const filteredLocales = useMemo(() => {\n    return combinedLocales.filter((locale) =>\n      localeToDisplayName(locale, whoAmI.getLocale())!\n        .toLowerCase()\n        .includes(filter.toLowerCase()),\n    );\n  }, [combinedLocales, filter, whoAmI]);\n\n  useFetch(\n    async () => {\n      const selectedLocales = combinedLocales.map((locale) => locale);\n\n      const results = await Promise.all(\n        selectedLocales.map((selectedLocale) =>\n          adminClient.realms.getRealmLocalizationTexts({\n            realm: realmName,\n            selectedLocale,\n          }),\n        ),\n      );\n\n      const translations = results.map((result, index) => {\n        const locale = selectedLocales[index];\n        const value = result[translationKey];\n        return {\n          key: translationKey,\n          translations: [{ locale, value }],\n        };\n      });\n\n      const defaultValuesMap = translations.reduce((acc, translation) => {\n        const locale = translation.translations[0].locale;\n        const value = translation.translations[0].value;\n        return { ...acc, [locale]: value };\n      }, {});\n\n      return defaultValuesMap;\n    },\n    (fetchedData) => {\n      setDefaultTranslations((prevTranslations) => {\n        if (prevTranslations !== fetchedData) {\n          return fetchedData;\n        }\n        return prevTranslations;\n      });\n    },\n    [combinedLocales, translationKey, realmName],\n  );\n\n  useEffect(() => {\n    combinedLocales.forEach((locale, rowIndex) => {\n      setValue(`translations.${rowIndex}.locale`, locale);\n\n      const translationExists =\n        translations.translations[rowIndex] !== undefined;\n      setValue(\n        `translations.${rowIndex}.value`,\n        translationExists\n          ? translations.translations[rowIndex]?.value\n          : defaultTranslations[locale] || \"\",\n      );\n    });\n    setValue(\"key\", translationKey);\n  }, [\n    combinedLocales,\n    defaultTranslations,\n    translationKey,\n    setValue,\n    translations,\n  ]);\n\n  const handleOk = () => {\n    const formData = getValues();\n\n    const updatedTranslations = formData.translations.map((translation) => {\n      if (translation.locale === filter) {\n        return {\n          ...translation,\n          value:\n            formData.translations.find((t) => t.locale === filter)?.value ?? \"\",\n        };\n      }\n      return translation;\n    });\n\n    onTranslationsAdded({\n      key: formData.key,\n      translations: updatedTranslations,\n    });\n\n    toggleDialog();\n  };\n\n  const isRequiredTranslation = useWatch({\n    control: form.control,\n    name: \"translations.0.value\",\n  });\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title={t(\"addTranslationsModalTitle\")}\n      isOpen\n      onClose={toggleDialog}\n      actions={[\n        <Button\n          key=\"ok\"\n          data-testid=\"okTranslationBtn\"\n          variant=\"primary\"\n          type=\"submit\"\n          form=\"add-translation\"\n          isDisabled={!isValid || !isRequiredTranslation}\n        >\n          {t(\"addTranslationDialogOkBtn\")}\n        </Button>,\n        <Button\n          key=\"cancel\"\n          data-testid=\"cancelTranslationBtn\"\n          variant=\"link\"\n          onClick={onCancel}\n        >\n          {t(\"cancel\")}\n        </Button>,\n      ]}\n    >\n      <Flex\n        direction={{ default: \"column\" }}\n        spaceItems={{ default: \"spaceItemsNone\" }}\n      >\n        <FlexItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              {type !== \"displayHeader\"\n                ? t(\"addTranslationsModalSubTitleDescription\")\n                : t(\"addTranslationsModalSubTitle\")}{\" \"}\n              <strong>{t(\"addTranslationsModalSubTitleBolded\")}</strong>\n            </Text>\n          </TextContent>\n        </FlexItem>\n        <FlexItem>\n          <FormProvider {...form}>\n            <Form\n              id=\"add-translation\"\n              data-testid=\"addTranslationForm\"\n              onSubmit={handleSubmit(handleOk)}\n            >\n              <TextControl\n                name=\"key\"\n                label={t(\"translationKey\")}\n                className=\"pf-v5-u-mt-md\"\n                data-testid=\"translation-key\"\n                isDisabled\n              />\n              <FlexItem>\n                <TextContent>\n                  <Text\n                    className=\"pf-v5-u-font-size-sm pf-v5-u-font-weight-bold\"\n                    component={TextVariants.p}\n                  >\n                    {t(\"translationsTableHeading\")}\n                  </Text>\n                </TextContent>\n                <PaginatingTableToolbar\n                  count={combinedLocales.length}\n                  first={first}\n                  max={max}\n                  onNextClick={setFirst}\n                  onPreviousClick={setFirst}\n                  onPerPageSelect={(first, max) => {\n                    setFirst(first);\n                    setMax(max);\n                  }}\n                  inputGroupName={\"search\"}\n                  inputGroupOnEnter={(search) => {\n                    setFilter(search);\n                    setFirst(0);\n                    setMax(10);\n                  }}\n                  inputGroupPlaceholder={t(\"searchForLanguage\")}\n                >\n                  {filteredLocales.length === 0 && !filter && (\n                    <ListEmptyState\n                      hasIcon\n                      message={t(\"noLanguages\")}\n                      instructions={t(\"noLanguagesInstructions\")}\n                    />\n                  )}\n                  {filteredLocales.length === 0 && filter && (\n                    <ListEmptyState\n                      hasIcon\n                      icon={SearchIcon}\n                      isSearchVariant\n                      message={t(\"noSearchResults\")}\n                      instructions={t(\"noLanguagesSearchResultsInstructions\")}\n                    />\n                  )}\n                  {filteredLocales.length !== 0 && (\n                    <Table\n                      aria-label={t(\"addTranslationsDialogRowsTable\")}\n                      data-testid=\"add-translations-dialog-rows-table\"\n                    >\n                      <Thead>\n                        <Tr>\n                          <Th className=\"pf-v5-u-py-lg\">\n                            {t(\"supportedLanguagesTableColumnName\")}\n                          </Th>\n                          <Th className=\"pf-v5-u-py-lg\">\n                            {t(\"translationTableColumnName\")}\n                          </Th>\n                          <Th aria-hidden=\"true\" />\n                        </Tr>\n                      </Thead>\n                      <Tbody>\n                        {filteredLocales.map((locale, index) => {\n                          const rowIndex = combinedLocales.findIndex(\n                            (combinedLocale) => combinedLocale === locale,\n                          );\n                          return (\n                            <Tr key={index}>\n                              <Td\n                                className=\"pf-m-sm pf-v5-u-px-sm\"\n                                dataLabel={t(\"supportedLanguage\")}\n                              >\n                                <FormGroup fieldId=\"kc-supportedLanguage\">\n                                  {localeToDisplayName(\n                                    locale,\n                                    whoAmI.getLocale(),\n                                  )}\n                                  {locale === defaultLocales.toString() && (\n                                    <Label\n                                      className=\"pf-v5-u-ml-xs\"\n                                      color=\"blue\"\n                                    >\n                                      {t(\"defaultLanguage\")}\n                                    </Label>\n                                  )}\n                                </FormGroup>\n                              </Td>\n                              <Td>\n                                {locale === defaultLocales.toString() && (\n                                  <TextControl\n                                    name={`translations.${rowIndex}.value`}\n                                    label={t(\"translationValue\")}\n                                    data-testid={`translation-value-${rowIndex}`}\n                                    rules={{\n                                      required: t(\"required\"),\n                                    }}\n                                  />\n                                )}\n                                {locale !== defaultLocales.toString() && (\n                                  <TextControl\n                                    name={`translations.${rowIndex}.value`}\n                                    label={t(\"translationValue\")}\n                                    data-testid={`translation-value-${rowIndex}`}\n                                  />\n                                )}\n                              </Td>\n                            </Tr>\n                          );\n                        })}\n                      </Tbody>\n                    </Table>\n                  )}\n                </PaginatingTableToolbar>\n              </FlexItem>\n            </Form>\n          </FormProvider>\n        </FlexItem>\n      </Flex>\n    </Modal>\n  );\n};\n"],"names":["GlobeRouteIconConfig","GlobeRouteIcon","createIcon","AddTranslationsDialog","translationKey","translations","type","onCancel","toggleDialog","onTranslationsAdded","adminClient","useAdminClient","useTranslation","realmName","realm","useRealm","combinedLocales","useLocale","whoAmI","useWhoAmI","max","setMax","useState","first","setFirst","filter","setFilter","defaultTranslations","setDefaultTranslations","form","useForm","getValues","handleSubmit","setValue","isValid","defaultLocales","useMemo","filteredLocales","locale","localeToDisplayName","useFetch","selectedLocales","selectedLocale","result","index","value","acc","translation","fetchedData","prevTranslations","useEffect","rowIndex","translationExists","handleOk","formData","updatedTranslations","t","isRequiredTranslation","useWatch","jsx","Modal","ModalVariant","Button","jsxs","Flex","FlexItem","TextContent","Text","TextVariants","FormProvider","Form","TextControl","PaginatingTableToolbar","search","ListEmptyState","SearchIcon","Table","Thead","Tr","Th","Tbody","combinedLocale","Td","FormGroup","Label"],"mappings":"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","x_google_ignoreList":[0]}