{"version":3,"file":"ResourceDetails-CEGXRP4b.js","sources":["../../../../../../../src/clients/authorization/ScopePicker.tsx","../../../../../../../src/clients/authorization/ResourceDetails.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport {\n  HelpItem,\n  KeycloakSelect,\n  SelectVariant,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { FormGroup, SelectOption } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { KeycloakSpinner } from \"@keycloak/keycloak-ui-shared\";\n\ntype Scope = {\n  id: string;\n  name: string;\n};\n\nexport const ScopePicker = ({ clientId }: { clientId: string }) => {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const { control } = useFormContext();\n\n  const [open, setOpen] = useState(false);\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>();\n  const [search, setSearch] = useState(\"\");\n\n  useFetch(\n    () => {\n      const params = {\n        id: clientId,\n        first: 0,\n        max: 20,\n        deep: false,\n        name: search,\n      };\n      return adminClient.clients.listAllScopes(params);\n    },\n    setScopes,\n    [search],\n  );\n\n  const renderScopes = (scopes: ScopeRepresentation[]) =>\n    scopes.map((option) => (\n      <SelectOption key={option.id} value={option}>\n        {option.name}\n      </SelectOption>\n    ));\n\n  if (!scopes) return <KeycloakSpinner />;\n  return (\n    <FormGroup\n      label={t(\"authorizationScopes\")}\n      labelIcon={\n        <HelpItem helpText={t(\"clientScopesHelp\")} fieldLabelId=\"scopes\" />\n      }\n      fieldId=\"scopes\"\n    >\n      <Controller\n        name=\"scopes\"\n        defaultValue={[]}\n        control={control}\n        render={({ field }) => (\n          <KeycloakSelect\n            toggleId=\"scopes\"\n            variant={SelectVariant.typeaheadMulti}\n            chipGroupProps={{\n              numChips: 3,\n              expandedText: t(\"hide\"),\n              collapsedText: t(\"showRemaining\"),\n            }}\n            onToggle={(val) => setOpen(val)}\n            isOpen={open}\n            selections={field.value.map((o: Scope) => o.name)}\n            onFilter={(value) => {\n              setSearch(value);\n              return renderScopes(scopes);\n            }}\n            onSelect={(selectedValue) => {\n              const option =\n                typeof selectedValue === \"string\"\n                  ? selectedValue\n                  : (selectedValue as Scope).name;\n              const changedValue = field.value.find(\n                (o: Scope) => o.name === option,\n              )\n                ? field.value.filter((item: Scope) => item.name !== option)\n                : [...field.value, selectedValue];\n              field.onChange(changedValue);\n            }}\n            onClear={() => {\n              setSearch(\"\");\n              field.onChange([]);\n            }}\n            typeAheadAriaLabel={t(\"authorizationScopes\")}\n          >\n            {renderScopes(scopes)}\n          </KeycloakSelect>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport type ResourceServerRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport {\n  HelpItem,\n  TextControl,\n  useAlerts,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  Alert,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { DefaultSwitchControl } from \"../../components/SwitchControl\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { KeycloakSpinner } from \"@keycloak/keycloak-ui-shared\";\nimport { MultiLineInput } from \"../../components/multi-line-input/MultiLineInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAccess } from \"../../context/access/Access\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport { ResourceDetailsParams, toResourceDetails } from \"../routes/Resource\";\nimport { ScopePicker } from \"./ScopePicker\";\nimport \"./resource-details.css\";\n\ntype SubmittedResource = Omit<\n  ResourceRepresentation,\n  \"attributes\" | \"scopes\"\n> & {\n  attributes: KeyValueType[];\n};\n\nexport default function ResourceDetails() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const [client, setClient] = useState<ClientRepresentation>();\n  const [resource, setResource] = useState<ResourceRepresentation>();\n\n  const [permissions, setPermission] =\n    useState<ResourceServerRepresentation[]>();\n\n  const { addAlert, addError } = useAlerts();\n  const form = useForm<SubmittedResource>({\n    mode: \"onChange\",\n  });\n  const { setValue, handleSubmit } = form;\n\n  const { id, resourceId, realm } = useParams<ResourceDetailsParams>();\n  const navigate = useNavigate();\n\n  const setupForm = (resource: ResourceRepresentation = {}) => {\n    convertToFormValues(resource, setValue);\n  };\n\n  const { hasAccess } = useAccess();\n\n  const isDisabled = !hasAccess(\"manage-authorization\");\n\n  useFetch(\n    () =>\n      Promise.all([\n        adminClient.clients.findOne({ id }),\n        resourceId\n          ? adminClient.clients.getResource({ id, resourceId })\n          : Promise.resolve(undefined),\n        resourceId\n          ? adminClient.clients.listPermissionsByResource({ id, resourceId })\n          : Promise.resolve(undefined),\n      ]),\n    ([client, resource, permissions]) => {\n      if (!client) {\n        throw new Error(t(\"notFound\"));\n      }\n      setClient(client);\n      setPermission(permissions);\n      setResource(resource);\n      setupForm(resource);\n    },\n    [],\n  );\n\n  const submit = async (submitted: SubmittedResource) => {\n    const resource = convertFormValuesToObject<\n      SubmittedResource,\n      ResourceRepresentation\n    >(submitted);\n\n    try {\n      if (resourceId) {\n        await adminClient.clients.updateResource({ id, resourceId }, resource);\n      } else {\n        const result = await adminClient.clients.createResource(\n          { id },\n          resource,\n        );\n        setResource(resource);\n        navigate(toResourceDetails({ realm, id, resourceId: result._id! }));\n      }\n      addAlert(\n        t((resourceId ? \"update\" : \"create\") + \"ResourceSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\"resourceSaveError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deleteResource\",\n    children: (\n      <>\n        {t(\"deleteResourceConfirm\")}\n        {permissions?.length !== 0 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            isPlain\n            title={t(\"deleteResourceWarning\")}\n            className=\"pf-v5-u-pt-lg\"\n          >\n            <p className=\"pf-v5-u-pt-xs\">\n              {permissions?.map((permission) => (\n                <strong key={permission.id} className=\"pf-v5-u-pr-md\">\n                  {permission.name}\n                </strong>\n              ))}\n            </p>\n          </Alert>\n        )}\n      </>\n    ),\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delResource({\n          id,\n          resourceId: resourceId!,\n        });\n        addAlert(t(\"resourceDeletedSuccess\"), AlertVariant.success);\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"resources\" }));\n      } catch (error) {\n        addError(\"resourceDeletedError\", error);\n      }\n    },\n  });\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={resourceId ? resource?.name! : \"createResource\"}\n        dropdownItems={\n          resourceId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  isDisabled={isDisabled}\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"manage-authorization\"\n            className=\"keycloak__resource-details__form\"\n            onSubmit={handleSubmit(submit)}\n          >\n            <TextControl\n              name={resourceId ? \"owner.name\" : \"\"}\n              label={t(\"owner\")}\n              labelIcon={t(\"ownerHelp\")}\n              defaultValue={client.clientId}\n              readOnly\n            />\n            <TextControl\n              name={\"name\"}\n              label={t(\"name\")}\n              labelIcon={t(\"resourceNameHelp\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <TextControl\n              name=\"displayName\"\n              label={t(\"displayName\")}\n              labelIcon={t(\"displayNameHelp\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <TextControl\n              name=\"type\"\n              label={t(\"type\")}\n              labelIcon={t(\"resourceDetailsTypeHelp\")}\n            />\n            <FormGroup\n              label={t(\"uris\")}\n              fieldId=\"uris\"\n              labelIcon={\n                <HelpItem helpText={t(\"urisHelp\")} fieldLabelId=\"uris\" />\n              }\n            >\n              <MultiLineInput\n                name=\"uris\"\n                type=\"url\"\n                aria-label={t(\"uris\")}\n                addButtonLabel=\"addUri\"\n              />\n            </FormGroup>\n            <ScopePicker clientId={id} />\n            <TextControl\n              name=\"icon_uri\"\n              label={t(\"iconUri\")}\n              labelIcon={t(\"iconUriHelp\")}\n              type=\"url\"\n            />\n            <DefaultSwitchControl\n              name=\"ownerManagedAccess\"\n              label={t(\"ownerManagedAccess\")}\n              labelIcon={t(\"ownerManagedAccessHelp\")}\n            />\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"resourceAttribute\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"resourceAttributeHelp\")}\n                  fieldLabelId=\"resourceAttribute\"\n                />\n              }\n              fieldId=\"resourceAttribute\"\n            >\n              <KeyValueInput name=\"attributes\" isDisabled={isDisabled} />\n            </FormGroup>\n            <ActionGroup>\n              <div className=\"pf-v5-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"save\")}\n                </Button>\n\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"resources\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"cancel\")}\n                </Button>\n              </div>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopePicker","clientId","adminClient","useAdminClient","t","useTranslation","control","useFormContext","open","setOpen","useState","scopes","setScopes","search","setSearch","useFetch","params","renderScopes","option","jsx","SelectOption","FormGroup","HelpItem","Controller","field","KeycloakSelect","SelectVariant","val","o","value","selectedValue","changedValue","item","KeycloakSpinner","ResourceDetails","client","setClient","resource","setResource","permissions","setPermission","addAlert","addError","useAlerts","form","useForm","setValue","handleSubmit","id","resourceId","realm","useParams","navigate","useNavigate","setupForm","convertToFormValues","hasAccess","useAccess","isDisabled","submit","submitted","convertFormValuesToObject","result","toResourceDetails","AlertVariant","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","jsxs","Fragment","Alert","permission","toAuthorizationTab","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","TextControl","MultiLineInput","DefaultSwitchControl","KeyValueInput","ActionGroup","Button","ButtonVariant","props","Link"],"mappings":"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"}