{"version":3,"file":"ScopeDetails-BjvGANrZ.js","sources":["../../../../../../../src/clients/authorization/ScopeDetails.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport { TextControl, useAlerts, useFetch } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useParams } from \"../../utils/useParams\";\nimport useToggle from \"../../utils/useToggle\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport type { ScopeDetailsParams } from \"../routes/Scope\";\nimport { DeleteScopeDialog } from \"./DeleteScopeDialog\";\n\ntype FormFields = Omit<ScopeRepresentation, \"resources\">;\n\nexport default function ScopeDetails() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const { id, scopeId, realm } = useParams<ScopeDetailsParams>();\n  const navigate = useNavigate();\n  const { addAlert, addError } = useAlerts();\n  const [deleteDialog, toggleDeleteDialog] = useToggle();\n  const [scope, setScope] = useState<ScopeRepresentation>();\n  const form = useForm<FormFields>({\n    mode: \"onChange\",\n  });\n  const { reset, handleSubmit } = form;\n\n  useFetch(\n    async () => {\n      if (scopeId) {\n        const scope = await adminClient.clients.getAuthorizationScope({\n          id,\n          scopeId,\n        });\n        if (!scope) {\n          throw new Error(t(\"notFound\"));\n        }\n        return scope;\n      }\n    },\n    (scope) => {\n      setScope(scope);\n      reset({ ...scope });\n    },\n    [],\n  );\n\n  const onSubmit = async (scope: ScopeRepresentation) => {\n    try {\n      if (scopeId) {\n        await adminClient.clients.updateAuthorizationScope(\n          { id, scopeId },\n          scope,\n        );\n        setScope(scope);\n      } else {\n        await adminClient.clients.createAuthorizationScope(\n          { id },\n          {\n            name: scope.name!,\n            displayName: scope.displayName,\n            iconUri: scope.iconUri,\n          },\n        );\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"scopes\" }));\n      }\n      addAlert(\n        t((scopeId ? \"update\" : \"create\") + \"ScopeSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\"scopeSaveError\", error);\n    }\n  };\n\n  return (\n    <>\n      <DeleteScopeDialog\n        clientId={id}\n        open={deleteDialog}\n        toggleDialog={toggleDeleteDialog}\n        selectedScope={scope}\n        refresh={() =>\n          navigate(toAuthorizationTab({ realm, clientId: id, tab: \"scopes\" }))\n        }\n      />\n      <ViewHeader\n        titleKey={scopeId ? scope?.name! : t(\"createAuthorizationScope\")}\n        dropdownItems={\n          scopeId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"manage-authorization\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <TextControl\n              name=\"name\"\n              label={t(\"name\")}\n              labelIcon={t(\"scopeNameHelp\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <TextControl\n              name=\"displayName\"\n              label={t(\"displayName\")}\n              labelIcon={t(\"scopeDisplayNameHelp\")}\n            />\n            <TextControl\n              name=\"iconUri\"\n              label={t(\"iconUri\")}\n              labelIcon={t(\"iconUriHelp\")}\n            />\n            <ActionGroup>\n              <div className=\"pf-v5-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"save\")}\n                </Button>\n\n                {!scope ? (\n                  <Button\n                    variant=\"link\"\n                    data-testid=\"cancel\"\n                    component={(props) => (\n                      <Link\n                        {...props}\n                        to={toAuthorizationTab({\n                          realm,\n                          clientId: id,\n                          tab: \"scopes\",\n                        })}\n                      ></Link>\n                    )}\n                  >\n                    {t(\"cancel\")}\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"link\"\n                    data-testid=\"revert\"\n                    onClick={() => reset({ ...scope })}\n                  >\n                    {t(\"revert\")}\n                  </Button>\n                )}\n              </div>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopeDetails","adminClient","useAdminClient","t","useTranslation","id","scopeId","realm","useParams","navigate","useNavigate","addAlert","addError","useAlerts","deleteDialog","toggleDeleteDialog","useToggle","scope","setScope","useState","form","useForm","reset","handleSubmit","useFetch","onSubmit","toAuthorizationTab","AlertVariant","error","jsxs","Fragment","jsx","DeleteScopeDialog","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","TextControl","ActionGroup","Button","ButtonVariant","props","Link"],"mappings":"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"}