{"version":3,"file":"CustomProviderSettings-C1YyCJQ5.js","sources":["../../../../../../../src/user-federation/custom/SyncSettings.tsx","../../../../../../../src/user-federation/custom/CustomProviderSettings.tsx"],"sourcesContent":["import { FormGroup, Switch } from \"@patternfly/react-core\";\nimport { Controller, FormProvider, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpItem, TextControl } from \"@keycloak/keycloak-ui-shared\";\n\nexport const SyncSettings = () => {\n  const { t } = useTranslation();\n  const form = useFormContext();\n  const { control, watch } = form;\n  const watchPeriodicSync = watch(\"config.fullSyncPeriod\", \"-1\");\n  const watchChangedSync = watch(\"config.changedSyncPeriod\", \"-1\");\n\n  return (\n    <FormProvider {...form}>\n      <FormGroup\n        label={t(\"periodicFullSync\")}\n        labelIcon={\n          <HelpItem\n            helpText={t(\"periodicFullSyncHelp\")}\n            fieldLabelId=\"periodicFullSync\"\n          />\n        }\n        fieldId=\"kc-periodic-full-sync\"\n        hasNoPaddingTop\n      >\n        <Controller\n          name=\"config.fullSyncPeriod\"\n          defaultValue=\"-1\"\n          control={control}\n          render={({ field }) => (\n            <Switch\n              id=\"kc-periodic-full-sync\"\n              data-testid=\"periodic-full-sync\"\n              onChange={(_event, value) => {\n                field.onChange(value ? \"604800\" : \"-1\");\n              }}\n              isChecked={field.value !== \"-1\"}\n              label={t(\"on\")}\n              labelOff={t(\"off\")}\n              aria-label={t(\"periodicFullSync\")}\n            />\n          )}\n        />\n      </FormGroup>\n      {watchPeriodicSync !== \"-1\" && (\n        <TextControl\n          name=\"config.fullSyncPeriod\"\n          label={t(\"fullSyncPeriod\")}\n          labelIcon={t(\"fullSyncPeriodHelp\")}\n          type=\"number\"\n          min={-1}\n          defaultValue=\"604800\"\n        />\n      )}\n      <FormGroup\n        label={t(\"periodicChangedUsersSync\")}\n        labelIcon={\n          <HelpItem\n            helpText={t(\"periodicChangedUsersSyncHelp\")}\n            fieldLabelId=\"periodicChangedUsersSync\"\n          />\n        }\n        fieldId=\"kc-periodic-changed-users-sync\"\n        hasNoPaddingTop\n      >\n        <Controller\n          name=\"config.changedSyncPeriod\"\n          defaultValue=\"-1\"\n          control={control}\n          render={({ field }) => (\n            <Switch\n              id=\"kc-periodic-changed-users-sync\"\n              data-testid=\"periodic-changed-users-sync\"\n              onChange={(_event, value) => {\n                field.onChange(value ? \"86400\" : \"-1\");\n              }}\n              isChecked={field.value !== \"-1\"}\n              label={t(\"on\")}\n              labelOff={t(\"off\")}\n              aria-label={t(\"periodicChangedUsersSync\")}\n            />\n          )}\n        />\n      </FormGroup>\n      {watchChangedSync !== \"-1\" && (\n        <TextControl\n          name=\"config.changedSyncPeriod\"\n          label={t(\"changedUsersSyncPeriod\")}\n          labelIcon={t(\"changedUsersSyncHelp\")}\n          type=\"number\"\n          min={-1}\n          defaultValue=\"86400\"\n        />\n      )}\n    </FormProvider>\n  );\n};\n","import type ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport { TextControl, useAlerts, useFetch } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { DynamicComponents } from \"../../components/dynamic/DynamicComponents\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport type { CustomUserFederationRouteParams } from \"../routes/CustomUserFederation\";\nimport { toUserFederation } from \"../routes/UserFederation\";\nimport { ExtendedHeader } from \"../shared/ExtendedHeader\";\nimport { SettingsCache } from \"../shared/SettingsCache\";\nimport { SyncSettings } from \"./SyncSettings\";\n\nimport \"./custom-provider-settings.css\";\n\nexport default function CustomProviderSettings() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const { id, providerId } = useParams<CustomUserFederationRouteParams>();\n  const navigate = useNavigate();\n  const form = useForm<ComponentRepresentation>({\n    mode: \"onChange\",\n  });\n  const {\n    reset,\n    setValue,\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { addAlert, addError } = useAlerts();\n  const { realm: realmName, realmRepresentation: realm } = useRealm();\n\n  const provider = (\n    useServerInfo().componentTypes?.[\n      \"org.keycloak.storage.UserStorageProvider\"\n    ] || []\n  ).find((p) => p.id === providerId);\n\n  useFetch(\n    async () => {\n      if (id) {\n        return await adminClient.components.findOne({ id });\n      }\n      return undefined;\n    },\n    (fetchedComponent) => {\n      if (fetchedComponent) {\n        convertToFormValues(fetchedComponent, setValue);\n      } else if (id) {\n        throw new Error(t(\"notFound\"));\n      }\n    },\n    [],\n  );\n\n  const save = async (component: ComponentRepresentation) => {\n    const saveComponent = convertFormValuesToObject({\n      ...component,\n      config: Object.fromEntries(\n        Object.entries(component.config || {}).map(([key, value]) => [\n          key,\n          Array.isArray(value) ? value : [value],\n        ]),\n      ),\n      providerId,\n      providerType: \"org.keycloak.storage.UserStorageProvider\",\n      parentId: realm?.id,\n    });\n\n    try {\n      if (!id) {\n        await adminClient.components.create(saveComponent);\n        navigate(toUserFederation({ realm: realmName }));\n      } else {\n        await adminClient.components.update({ id }, saveComponent);\n      }\n      reset({ ...component });\n      addAlert(\n        t(!id ? \"createUserProviderSuccess\" : \"userProviderSaveSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\n        !id ? \"createUserProviderError\" : \"userProviderSaveError\",\n        error,\n      );\n    }\n  };\n\n  return (\n    <FormProvider {...form}>\n      <ExtendedHeader provider={providerId} save={() => handleSubmit(save)()} />\n      <PageSection variant=\"light\">\n        <FormAccess\n          role=\"manage-realm\"\n          isHorizontal\n          className=\"keycloak__user-federation__custom-form\"\n          onSubmit={handleSubmit(save)}\n        >\n          <TextControl\n            name=\"name\"\n            label={t(\"uiDisplayName\")}\n            labelIcon={t(\"uiDisplayNameHelp\")}\n            rules={{\n              required: t(\"validateName\"),\n            }}\n          />\n          <DynamicComponents properties={provider?.properties || []} />\n          {provider?.metadata.synchronizable && <SyncSettings />}\n          <SettingsCache form={form} unWrap />\n          <ActionGroup>\n            <Button\n              isDisabled={!isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"custom-save\"\n            >\n              {t(\"save\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              component={(props) => (\n                <Link {...props} to={toUserFederation({ realm: realmName })} />\n              )}\n              data-testid=\"custom-cancel\"\n            >\n              {t(\"cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </FormProvider>\n  );\n}\n"],"names":["SyncSettings","t","useTranslation","form","useFormContext","control","watch","watchPeriodicSync","watchChangedSync","jsxs","FormProvider","jsx","FormGroup","HelpItem","Controller","field","Switch","_event","value","TextControl","CustomProviderSettings","adminClient","useAdminClient","id","providerId","useParams","navigate","useNavigate","useForm","reset","setValue","handleSubmit","isDirty","addAlert","addError","useAlerts","realmName","realm","useRealm","provider","useServerInfo","p","useFetch","fetchedComponent","convertToFormValues","save","component","saveComponent","convertFormValuesToObject","key","toUserFederation","AlertVariant","error","ExtendedHeader","PageSection","FormAccess","DynamicComponents","SettingsCache","ActionGroup","Button","props","Link"],"mappings":"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"}