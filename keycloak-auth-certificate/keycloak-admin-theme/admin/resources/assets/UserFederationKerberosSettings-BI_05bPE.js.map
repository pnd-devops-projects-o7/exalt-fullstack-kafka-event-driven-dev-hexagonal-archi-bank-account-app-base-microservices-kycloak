{"version":3,"file":"UserFederationKerberosSettings-BI_05bPE.js","sources":["../../../../../../../src/user-federation/kerberos/KerberosSettingsRequired.tsx","../../../../../../../src/user-federation/UserFederationKerberosSettings.tsx"],"sourcesContent":["import {\n  HelpItem,\n  SelectControl,\n  TextControl,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { FormGroup, Switch } from \"@patternfly/react-core\";\nimport { isEqual } from \"lodash-es\";\nimport { useEffect } from \"react\";\nimport {\n  Controller,\n  FormProvider,\n  UseFormReturn,\n  useWatch,\n} from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { WizardSectionHeader } from \"../../components/wizard-section-header/WizardSectionHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\n\nexport type KerberosSettingsRequiredProps = {\n  form: UseFormReturn;\n  showSectionHeading?: boolean;\n  showSectionDescription?: boolean;\n};\n\nexport const KerberosSettingsRequired = ({\n  form,\n  showSectionHeading = false,\n  showSectionDescription = false,\n}: KerberosSettingsRequiredProps) => {\n  const { t } = useTranslation();\n  const { realm, realmRepresentation } = useRealm();\n\n  const allowPassAuth = useWatch({\n    control: form.control,\n    name: \"config.allowPasswordAuthentication\",\n  });\n\n  useEffect(() => form.setValue(\"parentId\", realmRepresentation?.id), []);\n\n  return (\n    <FormProvider {...form}>\n      {showSectionHeading && (\n        <WizardSectionHeader\n          title={t(\"requiredSettings\")}\n          description={t(\"kerberosRequiredSettingsDescription\")}\n          showDescription={showSectionDescription}\n        />\n      )}\n\n      {/* Required settings */}\n      <FormAccess role=\"manage-realm\" isHorizontal>\n        {/* These hidden fields are required so data object written back matches data retrieved */}\n        <input\n          type=\"hidden\"\n          defaultValue=\"kerberos\"\n          {...form.register(\"providerId\")}\n        />\n        <input\n          type=\"hidden\"\n          defaultValue=\"org.keycloak.storage.UserStorageProvider\"\n          {...form.register(\"providerType\")}\n        />\n        <input\n          type=\"hidden\"\n          defaultValue={realm}\n          {...form.register(\"parentId\")}\n        />\n        <TextControl\n          name=\"name\"\n          label={t(\"uiDisplayName\")}\n          labelIcon={t(\"uiDisplayNameHelp\")}\n          rules={{\n            required: t(\"validateName\"),\n          }}\n        />\n        <TextControl\n          name=\"config.kerberosRealm.0\"\n          label={t(\"kerberosRealm\")}\n          labelIcon={t(\"kerberosRealmHelp\")}\n          rules={{\n            required: t(\"validateRealm\"),\n          }}\n        />\n        <TextControl\n          name=\"config.serverPrincipal.0\"\n          label={t(\"serverPrincipal\")}\n          labelIcon={t(\"serverPrincipalHelp\")}\n          rules={{\n            required: t(\"validateServerPrincipal\"),\n          }}\n        />\n        <TextControl\n          name=\"config.keyTab.0\"\n          label={t(\"keyTab\")}\n          labelIcon={t(\"keyTabHelp\")}\n          rules={{\n            required: t(\"validateKeyTab\"),\n          }}\n        />\n        <FormGroup\n          label={t(\"debug\")}\n          labelIcon={\n            <HelpItem helpText={t(\"debugHelp\")} fieldLabelId=\"debug\" />\n          }\n          fieldId=\"kc-debug\"\n          hasNoPaddingTop\n        >\n          <Controller\n            name=\"config.debug\"\n            defaultValue={[\"false\"]}\n            control={form.control}\n            render={({ field }) => (\n              <Switch\n                id={\"kc-debug\"}\n                data-testid=\"debug\"\n                onChange={(_event, value) => field.onChange([`${value}`])}\n                isChecked={field.value?.[0] === \"true\"}\n                label={t(\"on\")}\n                labelOff={t(\"off\")}\n                aria-label={t(\"debug\")}\n              />\n            )}\n          />\n        </FormGroup>\n        <FormGroup\n          label={t(\"allowPasswordAuthentication\")}\n          labelIcon={\n            <HelpItem\n              helpText={t(\"allowPasswordAuthenticationHelp\")}\n              fieldLabelId=\"allowPasswordAuthentication\"\n            />\n          }\n          fieldId=\"kc-allow-password-authentication\"\n          hasNoPaddingTop\n        >\n          <Controller\n            name=\"config.allowPasswordAuthentication\"\n            defaultValue={[\"false\"]}\n            control={form.control}\n            render={({ field }) => (\n              <Switch\n                id={\"kc-allow-password-authentication\"}\n                data-testid=\"allow-password-authentication\"\n                onChange={(_event, value) => field.onChange([`${value}`])}\n                isChecked={field.value?.[0] === \"true\"}\n                label={t(\"on\")}\n                labelOff={t(\"off\")}\n                aria-label={t(\"allowPasswordAuthentication\")}\n              />\n            )}\n          />\n        </FormGroup>\n        {isEqual(allowPassAuth, [\"true\"]) ? (\n          <SelectControl\n            name=\"config.editMode[0]\"\n            label={t(\"editMode\")}\n            labelIcon={t(\"editModeKerberosHelp\")}\n            controller={{\n              rules: { required: t(\"required\") },\n              defaultValue: \"READ_ONLY\",\n            }}\n            options={[\"READ_ONLY\", \"UNSYNCED\"]}\n          />\n        ) : null}\n        <FormGroup\n          label={t(\"updateFirstLogin\")}\n          labelIcon={\n            <HelpItem\n              helpText={t(\"updateFirstLoginHelp\")}\n              fieldLabelId=\"updateFirstLogin\"\n            />\n          }\n          fieldId=\"kc-update-first-login\"\n          hasNoPaddingTop\n        >\n          <Controller\n            name=\"config.updateProfileFirstLogin\"\n            defaultValue={[\"false\"]}\n            control={form.control}\n            render={({ field }) => (\n              <Switch\n                id={\"kc-update-first-login\"}\n                data-testid=\"update-first-login\"\n                onChange={(_event, value) => field.onChange([`${value}`])}\n                isChecked={field.value?.[0] === \"true\"}\n                label={t(\"on\")}\n                labelOff={t(\"off\")}\n                aria-label={t(\"updateFirstLogin\")}\n              />\n            )}\n          />\n        </FormGroup>\n      </FormAccess>\n    </FormProvider>\n  );\n};\n","import type ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport { useAlerts, useFetch } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  Form,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../admin-client\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useParams } from \"../utils/useParams\";\nimport { KerberosSettingsRequired } from \"./kerberos/KerberosSettingsRequired\";\nimport { toUserFederation } from \"./routes/UserFederation\";\nimport { Header } from \"./shared/Header\";\nimport { SettingsCache } from \"./shared/SettingsCache\";\n\nexport default function UserFederationKerberosSettings() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const form = useForm<ComponentRepresentation>({ mode: \"onChange\" });\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n\n  const { id } = useParams<{ id?: string }>();\n\n  const { addAlert, addError } = useAlerts();\n\n  useFetch(\n    async () => {\n      if (id) {\n        return adminClient.components.findOne({ id });\n      }\n    },\n    (fetchedComponent) => {\n      if (fetchedComponent) {\n        setupForm(fetchedComponent);\n      } else if (id) {\n        throw new Error(t(\"notFound\"));\n      }\n    },\n    [],\n  );\n\n  const setupForm = (component: ComponentRepresentation) => {\n    form.reset({ ...component });\n  };\n\n  const save = async (component: ComponentRepresentation) => {\n    try {\n      if (!id) {\n        await adminClient.components.create(component);\n        navigate(`/${realm}/user-federation`);\n      } else {\n        await adminClient.components.update({ id }, component);\n      }\n      setupForm(component as ComponentRepresentation);\n      addAlert(\n        t(!id ? \"createUserProviderSuccess\" : \"userProviderSaveSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\n        !id ? \"createUserProviderError\" : \"userProviderSaveError\",\n        error,\n      );\n    }\n  };\n\n  return (\n    <FormProvider {...form}>\n      <Header provider=\"Kerberos\" save={() => form.handleSubmit(save)()} />\n      <PageSection variant=\"light\">\n        <KerberosSettingsRequired form={form} showSectionHeading />\n      </PageSection>\n      <PageSection variant=\"light\" isFilled>\n        <SettingsCache form={form} showSectionHeading />\n        <Form onSubmit={form.handleSubmit(save)}>\n          <ActionGroup>\n            <Button\n              isDisabled={!form.formState.isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"kerberos-save\"\n            >\n              {t(\"save\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              onClick={() => navigate(toUserFederation({ realm }))}\n              data-testid=\"kerberos-cancel\"\n            >\n              {t(\"cancel\")}\n            </Button>\n          </ActionGroup>\n        </Form>\n      </PageSection>\n    </FormProvider>\n  );\n}\n"],"names":["KerberosSettingsRequired","form","showSectionHeading","showSectionDescription","t","useTranslation","realm","realmRepresentation","useRealm","allowPassAuth","useWatch","useEffect","jsxs","FormProvider","jsx","WizardSectionHeader","FormAccess","TextControl","FormGroup","HelpItem","Controller","field","Switch","_event","value","isEqual","SelectControl","UserFederationKerberosSettings","adminClient","useAdminClient","useForm","navigate","useNavigate","id","useParams","addAlert","addError","useAlerts","useFetch","fetchedComponent","setupForm","component","save","AlertVariant","error","Header","PageSection","SettingsCache","Form","ActionGroup","Button","toUserFederation"],"mappings":"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"}