{"version":3,"file":"CreateInitialAccessToken-TqW6wUWG.js","sources":["../../../../../../../src/clients/initial-access/AccessTokenDialog.tsx","../../../../../../../src/clients/initial-access/CreateInitialAccessToken.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport {\n  Alert,\n  AlertVariant,\n  ClipboardCopy,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\n\ntype AccessTokenDialogProps = {\n  token: string;\n  toggleDialog: () => void;\n};\n\nexport const AccessTokenDialog = ({\n  token,\n  toggleDialog,\n}: AccessTokenDialogProps) => {\n  const { t } = useTranslation();\n  return (\n    <Modal\n      title={t(\"initialAccessTokenDetails\")}\n      isOpen={true}\n      onClose={toggleDialog}\n      variant={ModalVariant.medium}\n    >\n      <Alert\n        title={t(\"copyInitialAccessToken\")}\n        component=\"h2\"\n        isInline\n        variant={AlertVariant.warning}\n      />\n      <Form className=\"pf-v5-u-mt-md\">\n        <FormGroup label={t(\"initialAccessToken\")} fieldId=\"initialAccessToken\">\n          <ClipboardCopy id=\"initialAccessToken\" isReadOnly>\n            {token}\n          </ClipboardCopy>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import type ClientInitialAccessPresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientInitialAccessPresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { NumberControl } from \"@keycloak/keycloak-ui-shared\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { TimeSelectorControl } from \"../../components/time-selector/TimeSelectorControl\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toClients } from \"../routes/Clients\";\nimport { AccessTokenDialog } from \"./AccessTokenDialog\";\n\nexport default function CreateInitialAccessToken() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const form = useForm({ mode: \"onChange\" });\n  const {\n    handleSubmit,\n    formState: { isValid },\n  } = form;\n\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const navigate = useNavigate();\n  const [token, setToken] = useState(\"\");\n\n  const save = async (clientToken: ClientInitialAccessPresentation) => {\n    try {\n      const access = await adminClient.realms.createClientsInitialAccess(\n        { realm },\n        clientToken,\n      );\n      setToken(access.token!);\n    } catch (error) {\n      addError(\"tokenSaveError\", error);\n    }\n  };\n\n  return (\n    <FormProvider {...form}>\n      {token && (\n        <AccessTokenDialog\n          token={token}\n          toggleDialog={() => {\n            setToken(\"\");\n            addAlert(t(\"tokenSaveSuccess\"), AlertVariant.success);\n            navigate(toClients({ realm, tab: \"initial-access-token\" }));\n          }}\n        />\n      )}\n      <ViewHeader titleKey=\"createToken\" subKey=\"createTokenHelp\" />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          role=\"create-client\"\n          onSubmit={handleSubmit(save)}\n        >\n          <TimeSelectorControl\n            name=\"expiration\"\n            label={t(\"expiration\")}\n            labelIcon={t(\"tokenExpirationHelp\")}\n            controller={{\n              defaultValue: 86400,\n              rules: {\n                min: {\n                  value: 1,\n                  message: t(\"expirationValueNotValid\"),\n                },\n              },\n            }}\n          />\n          <NumberControl\n            name=\"count\"\n            label={t(\"count\")}\n            labelIcon={t(\"countHelp\")}\n            controller={{\n              rules: {\n                min: 1,\n              },\n              defaultValue: 1,\n            }}\n          />\n          <ActionGroup>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"save\"\n              isDisabled={!isValid}\n            >\n              {t(\"save\")}\n            </Button>\n            <Button\n              data-testid=\"cancel\"\n              variant=\"link\"\n              component={(props) => (\n                <Link\n                  {...props}\n                  to={toClients({ realm, tab: \"initial-access-token\" })}\n                />\n              )}\n            >\n              {t(\"cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </FormProvider>\n  );\n}\n"],"names":["AccessTokenDialog","token","toggleDialog","useTranslation","jsxs","Modal","ModalVariant","jsx","Alert","AlertVariant","Form","FormGroup","ClipboardCopy","CreateInitialAccessToken","adminClient","useAdminClient","t","form","useForm","handleSubmit","isValid","realm","useRealm","addAlert","addError","useAlerts","navigate","useNavigate","setToken","useState","FormProvider","toClients","ViewHeader","PageSection","FormAccess","clientToken","access","error","TimeSelectorControl","NumberControl","ActionGroup","Button","props","Link"],"mappings":"4dAgBO,MAAMA,EAAoB,CAAC,CAChC,MAAAC,EACA,aAAAC,CACF,IAA8B,CACtB,KAAA,CAAE,GAAMC,IAEZ,OAAAC,EAACC,EAAA,CACC,MAAO,EAAE,2BAA2B,EACpC,OAAQ,GACR,QAASH,EACT,QAASI,EAAa,OAEtB,SAAA,CAAAC,EAACC,EAAA,CACC,MAAO,EAAE,wBAAwB,EACjC,UAAU,KACV,SAAQ,GACR,QAASC,EAAa,OAAA,CACxB,EACAF,EAACG,GAAK,UAAU,gBACd,WAACC,EAAU,CAAA,MAAO,EAAE,oBAAoB,EAAG,QAAQ,qBACjD,SAAAJ,EAACK,GAAc,GAAG,qBAAqB,WAAU,GAC9C,SAAAX,EACH,EACF,CACF,CAAA,CAAA,CAAA,CAAA,CAGN,ECtBA,SAAwBY,GAA2B,CAC3C,KAAA,CAAE,YAAAC,GAAgBC,IAElB,CAAE,EAAAC,GAAMb,IACRc,EAAOC,EAAQ,CAAE,KAAM,UAAY,CAAA,EACnC,CACJ,aAAAC,EACA,UAAW,CAAE,QAAAC,CAAQ,CACnB,EAAAH,EAEE,CAAE,MAAAI,GAAUC,IACZ,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EAEnCC,EAAWC,IACX,CAAC1B,EAAO2B,CAAQ,EAAIC,EAAS,EAAE,EAenC,OAAAzB,EAAC0B,EAAc,CAAA,GAAGb,EACf,SAAA,CACChB,GAAAM,EAACP,EAAA,CACC,MAAAC,EACA,aAAc,IAAM,CAClB2B,EAAS,EAAE,EACXL,EAASP,EAAE,kBAAkB,EAAGP,EAAa,OAAO,EACpDiB,EAASK,EAAU,CAAE,MAAAV,EAAO,IAAK,sBAAwB,CAAA,CAAC,CAC5D,CAAA,CACF,EAEDd,EAAAyB,EAAA,CAAW,SAAS,cAAc,OAAO,kBAAkB,EAC5DzB,EAAC0B,EAAY,CAAA,QAAQ,QACnB,SAAA7B,EAAC8B,EAAA,CACC,aAAY,GACZ,KAAK,gBACL,SAAUf,EA7BL,MAAOgB,GAAiD,CAC/D,GAAA,CACI,MAAAC,EAAS,MAAMtB,EAAY,OAAO,2BACtC,CAAE,MAAAO,CAAM,EACRc,CAAA,EAEFP,EAASQ,EAAO,KAAM,QACfC,EAAO,CACdb,EAAS,iBAAkBa,CAAK,CAClC,CAAA,CAoBiC,EAE3B,SAAA,CAAA9B,EAAC+B,EAAA,CACC,KAAK,aACL,MAAOtB,EAAE,YAAY,EACrB,UAAWA,EAAE,qBAAqB,EAClC,WAAY,CACV,aAAc,MACd,MAAO,CACL,IAAK,CACH,MAAO,EACP,QAASA,EAAE,yBAAyB,CACtC,CACF,CACF,CAAA,CACF,EACAT,EAACgC,EAAA,CACC,KAAK,QACL,MAAOvB,EAAE,OAAO,EAChB,UAAWA,EAAE,WAAW,EACxB,WAAY,CACV,MAAO,CACL,IAAK,CACP,EACA,aAAc,CAChB,CAAA,CACF,IACCwB,EACC,CAAA,SAAA,CAAAjC,EAACkC,EAAA,CACC,QAAQ,UACR,KAAK,SACL,cAAY,OACZ,WAAY,CAACrB,EAEZ,WAAE,MAAM,CAAA,CACX,EACAb,EAACkC,EAAA,CACC,cAAY,SACZ,QAAQ,OACR,UAAYC,GACVnC,EAACoC,EAAA,CACE,GAAGD,EACJ,GAAIX,EAAU,CAAE,MAAAV,EAAO,IAAK,uBAAwB,CAAA,CACtD,EAGD,WAAE,QAAQ,CAAA,CACb,CAAA,EACF,CAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}