{"version":3,"file":"KeySelect-DvFB2tXI.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-styles@5.4.0/node_modules/@patternfly/react-styles/css/components/ActionList/action-list.mjs","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionList.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionListItem.js","../../../../../../../src/components/key-value-form/KeySelect.tsx"],"sourcesContent":["import './action-list.css';\nexport default {\n  \"actionList\": \"pf-v5-c-action-list\",\n  \"actionListGroup\": \"pf-v5-c-action-list__group\",\n  \"modifiers\": {\n    \"icons\": \"pf-m-icons\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ActionList/action-list.mjs';\nexport const ActionList = (_a) => {\n    var { children, isIconList, className = '' } = _a, props = __rest(_a, [\"children\", \"isIconList\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.actionList, isIconList && styles.modifiers.icons, className) }, props), children));\n};\nActionList.displayName = 'ActionList';\n//# sourceMappingURL=ActionList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ActionList/action-list.mjs';\nexport const ActionListItem = (_a) => {\n    var { children, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(`${styles.actionList}__item`, className) }, props), children));\n};\nActionListItem.displayName = 'ActionListItem';\n//# sourceMappingURL=ActionListItem.js.map","import { KeycloakSelect } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  Grid,\n  GridItem,\n  SelectOption,\n  TextInput,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { UseControllerProps, useController } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport useToggle from \"../../utils/useToggle\";\nimport { DefaultValue } from \"./KeyValueInput\";\n\ntype KeySelectProp = UseControllerProps & {\n  selectItems: DefaultValue[];\n};\n\nexport const KeySelect = ({ selectItems, ...rest }: KeySelectProp) => {\n  const { t } = useTranslation();\n  const [open, toggle] = useToggle();\n  const { field } = useController(rest);\n  const [custom, setCustom] = useState(\n    !selectItems.map(({ key }) => key).includes(field.value),\n  );\n\n  return (\n    <Grid>\n      <GridItem lg={custom ? 2 : 12}>\n        <KeycloakSelect\n          onToggle={() => toggle()}\n          isOpen={open}\n          onSelect={(value) => {\n            if (value) {\n              setCustom(false);\n            }\n            field.onChange(value);\n            toggle();\n          }}\n          selections={!custom ? [field.value] : \"\"}\n        >\n          {[\n            <SelectOption key=\"custom\" onClick={() => setCustom(true)}>\n              {t(\"customAttribute\")}\n            </SelectOption>,\n            ...selectItems.map((item) => (\n              <SelectOption key={item.key} value={item.key}>\n                {item.label}\n              </SelectOption>\n            )),\n          ]}\n        </KeycloakSelect>\n      </GridItem>\n      {custom && (\n        <GridItem lg={10}>\n          <TextInput\n            id=\"customValue\"\n            data-testid={rest.name}\n            placeholder={t(\"keyPlaceholder\")}\n            value={field.value}\n            onChange={field.onChange}\n            autoFocus\n          />\n        </GridItem>\n      )}\n    </Grid>\n  );\n};\n"],"names":["styles","ActionList","_a","children","isIconList","className","props","__rest","React","css","ActionListItem","KeySelect","selectItems","rest","t","useTranslation","open","toggle","useToggle","field","useController","custom","setCustom","useState","key","Grid","jsx","GridItem","KeycloakSelect","value","SelectOption","item","TextInput"],"mappings":"8PACA,MAAeA,EAAA,CACb,WAAc,sBACd,gBAAmB,6BACnB,UAAa,CACX,MAAS,YACV,CACH,ECHaC,EAAcC,GAAO,CAC9B,GAAI,CAAE,SAAAC,EAAU,WAAAC,EAAY,UAAAC,EAAY,EAAI,EAAGH,EAAII,EAAQC,EAAOL,EAAI,CAAC,WAAY,aAAc,WAAW,CAAC,EAC7G,OAAQM,EAAM,cAAc,MAAO,OAAO,OAAO,CAAE,UAAWC,EAAIT,EAAO,WAAYI,GAAcJ,EAAO,UAAU,MAAOK,CAAS,GAAKC,CAAK,EAAGH,CAAQ,CAC7J,EACAF,EAAW,YAAc,aCJb,MAACS,EAAkBR,GAAO,CAClC,GAAI,CAAE,SAAAC,EAAU,UAAAE,EAAY,EAAI,EAAGH,EAAII,EAAQC,EAAOL,EAAI,CAAC,WAAY,WAAW,CAAC,EACnF,OAAQM,EAAM,cAAc,MAAO,OAAO,OAAO,CAAE,UAAWC,EAAI,GAAGT,EAAO,UAAU,SAAUK,CAAS,CAAC,EAAIC,CAAK,EAAGH,CAAQ,CAClI,EACAO,EAAe,YAAc,iBCStB,MAAMC,EAAY,CAAC,CAAE,YAAAC,EAAa,GAAGC,KAA0B,CAC9D,KAAA,CAAE,EAAAC,GAAMC,IACR,CAACC,EAAMC,CAAM,EAAIC,EAAU,EAC3B,CAAE,MAAAC,CAAA,EAAUC,EAAcP,CAAI,EAC9B,CAACQ,EAAQC,CAAS,EAAIC,EAC1B,CAACX,EAAY,IAAI,CAAC,CAAE,IAAAY,CAAI,IAAMA,CAAG,EAAE,SAASL,EAAM,KAAK,CAAA,EAGzD,SACGM,EACC,CAAA,SAAA,CAAAC,EAACC,EAAS,CAAA,GAAIN,EAAS,EAAI,GACzB,SAAAK,EAACE,EAAA,CACC,SAAU,IAAMX,EAAO,EACvB,OAAQD,EACR,SAAWa,GAAU,CACfA,GACFP,EAAU,EAAK,EAEjBH,EAAM,SAASU,CAAK,EACbZ,GACT,EACA,WAAaI,EAAyB,GAAhB,CAACF,EAAM,KAAK,EAEjC,SAAA,CACCO,EAACI,EAA0B,CAAA,QAAS,IAAMR,EAAU,EAAI,EACrD,SAAAR,EAAE,iBAAiB,CAAA,EADJ,QAElB,EACA,GAAGF,EAAY,IAAKmB,GACjBL,EAAAI,EAAA,CAA4B,MAAOC,EAAK,IACtC,SAAAA,EAAK,KADW,EAAAA,EAAK,GAExB,CACD,CACH,CAAA,CAAA,EAEJ,EACCV,GACCK,EAACC,EAAS,CAAA,GAAI,GACZ,SAAAD,EAACM,EAAA,CACC,GAAG,cACH,cAAanB,EAAK,KAClB,YAAaC,EAAE,gBAAgB,EAC/B,MAAOK,EAAM,MACb,SAAUA,EAAM,SAChB,UAAS,EAAA,CAAA,EAEb,CAEJ,CAAA,CAAA,CAEJ","x_google_ignoreList":[0,1,2]}