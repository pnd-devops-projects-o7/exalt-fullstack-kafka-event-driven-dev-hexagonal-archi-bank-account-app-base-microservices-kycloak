{"version":3,"file":"Dashboard-CbBeJlo5.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-styles@5.4.0/node_modules/@patternfly/react-styles/css/components/Brand/brand.mjs","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-tokens@5.4.0/node_modules/@patternfly/react-tokens/dist/esm/c_brand_Height.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-tokens@5.4.0/node_modules/@patternfly/react-tokens/dist/esm/c_brand_Width.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/Brand/Brand.js","../../../../../../../../../libs/keycloak-admin-client/lib/defs/featureRepresentation.js","../../../../../../../src/dashboard/ProviderInfo.tsx","../../../../../../../src/dashboard/Dashboard.tsx"],"sourcesContent":["import './brand.css';\nexport default {\n  \"brand\": \"pf-v5-c-brand\",\n  \"modifiers\": {\n    \"picture\": \"pf-m-picture\"\n  }\n};","export const c_brand_Height = {\n  \"name\": \"--pf-v5-c-brand--Height\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-v5-c-brand--Height)\"\n};\nexport default c_brand_Height;","export const c_brand_Width = {\n  \"name\": \"--pf-v5-c-brand--Width\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-v5-c-brand--Width)\"\n};\nexport default c_brand_Width;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Brand/brand.mjs';\nimport { setBreakpointCssVars } from '../../helpers';\nimport cssBrandHeight from '@patternfly/react-tokens/dist/esm/c_brand_Height';\nimport cssBrandWidth from '@patternfly/react-tokens/dist/esm/c_brand_Width';\nexport const Brand = (_a) => {\n    var { className = '', src = '', alt, children, widths, heights, style } = _a, props = __rest(_a, [\"className\", \"src\", \"alt\", \"children\", \"widths\", \"heights\", \"style\"]);\n    let responsiveStyles;\n    if (widths !== undefined) {\n        responsiveStyles = Object.assign({}, setBreakpointCssVars(widths, cssBrandWidth.name));\n    }\n    if (heights !== undefined) {\n        responsiveStyles = Object.assign(Object.assign({}, responsiveStyles), setBreakpointCssVars(heights, cssBrandHeight.name));\n    }\n    return (\n    /** the brand component currently contains no styling the 'pf-v5-c-brand' string will be used for the className */\n    children !== undefined ? (React.createElement(\"picture\", Object.assign({ className: css(styles.brand, styles.modifiers.picture, className), style: Object.assign(Object.assign({}, style), responsiveStyles) }, props),\n        children,\n        React.createElement(\"img\", { src: src, alt: alt }))) : (React.createElement(\"img\", Object.assign({}, props, { className: css(styles.brand, className), style: Object.assign(Object.assign({}, style), responsiveStyles), src: src, alt: alt }))));\n};\nBrand.displayName = 'Brand';\n//# sourceMappingURL=Brand.js.map","export var FeatureType;\n(function (FeatureType) {\n    FeatureType[\"Default\"] = \"DEFAULT\";\n    FeatureType[\"DisabledByDefault\"] = \"DISABLED_BY_DEFAULT\";\n    FeatureType[\"Preview\"] = \"PREVIEW\";\n    FeatureType[\"PreviewDisabledByDefault\"] = \"PREVIEW_DISABLED_BY_DEFAULT\";\n    FeatureType[\"Experimental\"] = \"EXPERIMENTAL\";\n    FeatureType[\"Deprecated\"] = \"DEPRECATED\";\n})(FeatureType || (FeatureType = {}));\n","import { TableToolbar } from \"@keycloak/keycloak-ui-shared\";\nimport { ExpandableSection, PageSection } from \"@patternfly/react-core\";\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\n\nexport const ProviderInfo = () => {\n  const { t } = useTranslation();\n  const serverInfo = useServerInfo();\n  const [filter, setFilter] = useState(\"\");\n  const [open, setOpen] = useState<string[]>([]);\n\n  const providerInfo = useMemo(\n    () =>\n      Object.entries(serverInfo.providers || []).filter(([key]) =>\n        key.toLowerCase().includes(filter.toLowerCase()),\n      ),\n    [filter],\n  );\n\n  const toggleOpen = (option: string) => {\n    if (open.includes(option)) {\n      setOpen(open.filter((item: string) => item !== option));\n    } else {\n      setOpen([...open, option]);\n    }\n  };\n\n  return (\n    <PageSection variant=\"light\">\n      <TableToolbar\n        inputGroupName=\"search\"\n        inputGroupPlaceholder={t(\"search\")}\n        inputGroupOnEnter={setFilter}\n      >\n        <Table variant=\"compact\">\n          <Thead>\n            <Tr>\n              <Th width={20}>{t(\"spi\")}</Th>\n              <Th>{t(\"providers\")}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {providerInfo.map(([name, { providers }]) => (\n              <Tr key={name}>\n                <Td>{name}</Td>\n                <Td>\n                  <ul>\n                    {Object.entries(providers).map(\n                      ([key, { operationalInfo }]) => (\n                        <li key={key}>\n                          {key}\n                          {operationalInfo ? (\n                            <ExpandableSection\n                              key={key}\n                              isExpanded={open.includes(key)}\n                              onToggle={() => toggleOpen(key)}\n                              toggleText={\n                                open.includes(key)\n                                  ? t(\"showLess\")\n                                  : t(\"showMore\")\n                              }\n                            >\n                              <Table borders={false}>\n                                <Tbody>\n                                  {Object.entries(operationalInfo).map(\n                                    ([key, value]) => (\n                                      <Tr key={key}>\n                                        <Td>{key}</Td>\n                                        <Td>{value}</Td>\n                                      </Tr>\n                                    ),\n                                  )}\n                                </Tbody>\n                              </Table>\n                            </ExpandableSection>\n                          ) : null}\n                        </li>\n                      ),\n                    )}\n                  </ul>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </TableToolbar>\n    </PageSection>\n  );\n};\n","import FeatureRepresentation, {\n  FeatureType,\n} from \"@keycloak/keycloak-admin-client/lib/defs/featureRepresentation\";\nimport { HelpItem, label, useEnvironment } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionList,\n  ActionListItem,\n  Brand,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateHeader,\n  Grid,\n  GridItem,\n  Label,\n  List,\n  ListItem,\n  ListVariant,\n  PageSection,\n  Tab,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { KeycloakSpinner } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../components/routable-tabs/RoutableTabs\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport helpUrls from \"../help-urls\";\nimport useLocaleSort, { mapByKey } from \"../utils/useLocaleSort\";\nimport { ProviderInfo } from \"./ProviderInfo\";\nimport { DashboardTab, toDashboard } from \"./routes/Dashboard\";\n\nimport \"./dashboard.css\";\n\nconst EmptyDashboard = () => {\n  const { environment } = useEnvironment();\n\n  const { t } = useTranslation();\n  const { realm, realmRepresentation: realmInfo } = useRealm();\n  const brandImage = environment.logo ? environment.logo : \"/icon.svg\";\n  const realmDisplayInfo = label(t, realmInfo?.displayName, realm);\n\n  return (\n    <PageSection variant=\"light\">\n      <EmptyState variant=\"lg\">\n        <Brand\n          src={environment.resourceUrl + brandImage}\n          alt=\"Keycloak icon\"\n          className=\"keycloak__dashboard_icon\"\n        />\n        <EmptyStateHeader titleText={<>{t(\"welcome\")}</>} headingLevel=\"h2\" />\n        <EmptyStateHeader titleText={realmDisplayInfo} headingLevel=\"h1\" />\n        <EmptyStateBody>{t(\"introduction\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n\ntype FeatureItemProps = {\n  feature: FeatureRepresentation;\n};\n\nconst FeatureItem = ({ feature }: FeatureItemProps) => {\n  const { t } = useTranslation();\n  return (\n    <ListItem className=\"pf-v5-u-mb-sm\">\n      {feature.name}&nbsp;\n      {feature.type === FeatureType.Experimental && (\n        <Label color=\"orange\">{t(\"experimental\")}</Label>\n      )}\n      {feature.type === FeatureType.Preview && (\n        <Label color=\"blue\">{t(\"preview\")}</Label>\n      )}\n      {feature.type === FeatureType.Default && (\n        <Label color=\"green\">{t(\"supported\")}</Label>\n      )}\n    </ListItem>\n  );\n};\n\nconst Dashboard = () => {\n  const { t } = useTranslation();\n  const { realm, realmRepresentation: realmInfo } = useRealm();\n  const serverInfo = useServerInfo();\n  const localeSort = useLocaleSort();\n\n  const sortedFeatures = useMemo(\n    () => localeSort(serverInfo.features ?? [], mapByKey(\"name\")),\n    [serverInfo.features],\n  );\n\n  const disabledFeatures = useMemo(\n    () => sortedFeatures.filter((f) => !f.enabled) || [],\n    [serverInfo.features],\n  );\n\n  const enabledFeatures = useMemo(\n    () => sortedFeatures.filter((f) => f.enabled) || [],\n    [serverInfo.features],\n  );\n\n  const useTab = (tab: DashboardTab) =>\n    useRoutableTab(\n      toDashboard({\n        realm,\n        tab,\n      }),\n    );\n\n  const realmDisplayInfo = label(t, realmInfo?.displayName, realm);\n\n  const welcomeTab = useTab(\"welcome\");\n  const infoTab = useTab(\"info\");\n  const providersTab = useTab(\"providers\");\n\n  if (Object.keys(serverInfo).length === 0) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <PageSection variant=\"light\">\n        <TextContent className=\"pf-v5-u-mr-sm\">\n          <Text component=\"h1\">{t(\"realmNameTitle\", { name: realm })}</Text>\n        </TextContent>\n      </PageSection>\n      <PageSection variant=\"light\" className=\"pf-v5-u-p-0\">\n        <RoutableTabs\n          data-testid=\"dashboard-tabs\"\n          defaultLocation={toDashboard({\n            realm,\n            tab: \"welcome\",\n          })}\n          isBox\n          mountOnEnter\n        >\n          <Tab\n            id=\"welcome\"\n            data-testid=\"welcomeTab\"\n            title={<TabTitleText>{t(\"welcomeTabTitle\")}</TabTitleText>}\n            {...welcomeTab}\n          >\n            <PageSection variant=\"light\">\n              <div className=\"pf-v5-l-grid pf-v5-u-ml-lg\">\n                <div className=\"pf-v5-l-grid__item pf-m-12-col\">\n                  <Title\n                    className=\"pf-v5-u-font-weight-bold\"\n                    headingLevel=\"h2\"\n                    size=\"3xl\"\n                  >\n                    {t(\"welcomeTo\", { realmDisplayInfo })}\n                  </Title>\n                </div>\n                <div className=\"pf-v5-l-grid__item keycloak__dashboard_welcome_tab\">\n                  <Text component={TextVariants.h3}>{t(\"welcomeText\")}</Text>\n                </div>\n                <div className=\"pf-v5-l-grid__item pf-m-10-col pf-v5-u-mt-md\">\n                  <Button\n                    className=\"pf-v5-u-px-lg pf-v5-u-py-sm\"\n                    component=\"a\"\n                    href={helpUrls.documentation}\n                    target=\"_blank\"\n                    variant=\"primary\"\n                  >\n                    {t(\"viewDocumentation\")}\n                  </Button>\n                </div>\n                <ActionList className=\"pf-v5-u-mt-sm\">\n                  <ActionListItem>\n                    <Button\n                      component=\"a\"\n                      href={helpUrls.guides}\n                      target=\"_blank\"\n                      variant=\"tertiary\"\n                    >\n                      {t(\"viewGuides\")}\n                    </Button>\n                  </ActionListItem>\n                  <ActionListItem>\n                    <Button\n                      component=\"a\"\n                      href={helpUrls.community}\n                      target=\"_blank\"\n                      variant=\"tertiary\"\n                    >\n                      {t(\"joinCommunity\")}\n                    </Button>\n                  </ActionListItem>\n                  <ActionListItem>\n                    <Button\n                      component=\"a\"\n                      href={helpUrls.blog}\n                      target=\"_blank\"\n                      variant=\"tertiary\"\n                    >\n                      {t(\"readBlog\")}\n                    </Button>\n                  </ActionListItem>\n                </ActionList>\n              </div>\n            </PageSection>\n          </Tab>\n          <Tab\n            id=\"info\"\n            data-testid=\"infoTab\"\n            title={<TabTitleText>{t(\"serverInfo\")}</TabTitleText>}\n            {...infoTab}\n          >\n            <PageSection variant=\"light\">\n              <Grid hasGutter>\n                <GridItem lg={2} sm={12}>\n                  <Card className=\"keycloak__dashboard_card\">\n                    <CardTitle>{t(\"serverInfo\")}</CardTitle>\n                    <CardBody>\n                      <DescriptionList>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"version\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.systemInfo?.version}\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    </CardBody>\n                    <CardTitle>{t(\"memory\")}</CardTitle>\n                    <CardBody>\n                      <DescriptionList>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"totalMemory\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.memoryInfo?.totalFormated}\n                          </DescriptionListDescription>\n                          <DescriptionListTerm>\n                            {t(\"freeMemory\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.memoryInfo?.freeFormated}\n                          </DescriptionListDescription>\n                          <DescriptionListTerm>\n                            {t(\"usedMemory\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.memoryInfo?.usedFormated}\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    </CardBody>\n                  </Card>\n                </GridItem>\n                <GridItem lg={10} sm={12}>\n                  <Card className=\"keycloak__dashboard_card\">\n                    <CardTitle>{t(\"profile\")}</CardTitle>\n                    <CardBody>\n                      <DescriptionList>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"enabledFeatures\")}{\" \"}\n                            <HelpItem\n                              fieldLabelId=\"enabledFeatures\"\n                              helpText={t(\"infoEnabledFeatures\")}\n                            />\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            <List variant={ListVariant.inline}>\n                              {enabledFeatures.map((feature) => (\n                                <FeatureItem\n                                  key={feature.name}\n                                  feature={feature}\n                                />\n                              ))}\n                            </List>\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"disabledFeatures\")}{\" \"}\n                            <HelpItem\n                              fieldLabelId=\"disabledFeatures\"\n                              helpText={t(\"infoDisabledFeatures\")}\n                            />\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            <List variant={ListVariant.inline}>\n                              {disabledFeatures.map((feature) => (\n                                <FeatureItem\n                                  key={feature.name}\n                                  feature={feature}\n                                />\n                              ))}\n                            </List>\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    </CardBody>\n                  </Card>\n                </GridItem>\n              </Grid>\n            </PageSection>\n          </Tab>\n          <Tab\n            id=\"providers\"\n            data-testid=\"providersTab\"\n            title={<TabTitleText>{t(\"providerInfo\")}</TabTitleText>}\n            {...providersTab}\n          >\n            <ProviderInfo />\n          </Tab>\n        </RoutableTabs>\n      </PageSection>\n    </>\n  );\n};\n\nexport default function DashboardSection() {\n  const { realm } = useRealm();\n  const isMasterRealm = realm === \"master\";\n  return (\n    <>\n      {!isMasterRealm && <EmptyDashboard />}\n      {isMasterRealm && <Dashboard />}\n    </>\n  );\n}\n"],"names":["styles","c_brand_Height","c_brand_Width","Brand","_a","className","src","alt","children","widths","heights","style","props","__rest","responsiveStyles","setBreakpointCssVars","cssBrandWidth","cssBrandHeight","React","css","FeatureType","ProviderInfo","t","useTranslation","serverInfo","useServerInfo","filter","setFilter","useState","open","setOpen","providerInfo","useMemo","key","toggleOpen","option","item","jsx","PageSection","TableToolbar","jsxs","Table","Thead","Tr","Th","Tbody","name","providers","Td","operationalInfo","ExpandableSection","value","EmptyDashboard","environment","useEnvironment","realm","realmInfo","useRealm","brandImage","realmDisplayInfo","label","EmptyState","EmptyStateHeader","Fragment","EmptyStateBody","FeatureItem","feature","ListItem","Label","Dashboard","localeSort","useLocaleSort","sortedFeatures","mapByKey","disabledFeatures","f","enabledFeatures","useTab","tab","useRoutableTab","toDashboard","welcomeTab","infoTab","providersTab","KeycloakSpinner","TextContent","Text","RoutableTabs","Tab","TabTitleText","Title","TextVariants","Button","helpUrls","ActionList","ActionListItem","Grid","GridItem","Card","CardTitle","CardBody","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","HelpItem","List","ListVariant","DashboardSection","isMasterRealm"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}