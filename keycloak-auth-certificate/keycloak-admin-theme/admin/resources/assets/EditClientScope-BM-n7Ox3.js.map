{"version":3,"file":"EditClientScope-BM-n7Ox3.js","sources":["../../../../../../../src/client-scopes/EditClientScope.tsx"],"sourcesContent":["import ClientScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientScopeRepresentation\";\nimport type ProtocolMapperRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/protocolMapperRepresentation\";\nimport type { RoleMappingPayload } from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport type { ProtocolMapperTypeRepresentation } from \"@keycloak/keycloak-admin-client/lib/defs/serverInfoRepesentation\";\nimport { useAlerts, useFetch, useHelp } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  Alert,\n  AlertVariant,\n  ButtonVariant,\n  DropdownItem,\n  PageSection,\n  Tab,\n  TabTitleText,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../admin-client\";\nimport {\n  AllClientScopes,\n  ClientScope,\n  ClientScopeDefaultOptionalType,\n  changeScope,\n} from \"../components/client-scope/ClientScopeTypes\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { KeycloakSpinner } from \"@keycloak/keycloak-ui-shared\";\nimport { RoleMapping, Row } from \"../components/role-mapping/RoleMapping\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../components/routable-tabs/RoutableTabs\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { convertFormValuesToObject } from \"../util\";\nimport { useParams } from \"../utils/useParams\";\nimport { MapperList } from \"./details/MapperList\";\nimport { ScopeForm } from \"./details/ScopeForm\";\nimport {\n  ClientScopeParams,\n  ClientScopeTab,\n  toClientScope,\n} from \"./routes/ClientScope\";\nimport { toClientScopes } from \"./routes/ClientScopes\";\nimport { toMapper } from \"./routes/Mapper\";\n\nexport default function EditClientScope() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const { id } = useParams<ClientScopeParams>();\n  const { addAlert, addError } = useAlerts();\n  const { enabled } = useHelp();\n  const [clientScope, setClientScope] =\n    useState<ClientScopeDefaultOptionalType>();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  useFetch(\n    async () => {\n      const clientScope = await adminClient.clientScopes.findOne({ id });\n\n      if (!clientScope) {\n        throw new Error(t(\"notFound\"));\n      }\n\n      return {\n        ...clientScope,\n        type: await determineScopeType(clientScope),\n      };\n    },\n    (clientScope) => {\n      setClientScope(clientScope);\n    },\n    [key, id],\n  );\n\n  async function determineScopeType(clientScope: ClientScopeRepresentation) {\n    const defaultScopes =\n      await adminClient.clientScopes.listDefaultClientScopes();\n    const hasDefaultScope = defaultScopes.find(\n      (defaultScope) => defaultScope.name === clientScope.name,\n    );\n\n    if (hasDefaultScope) {\n      return ClientScope.default;\n    }\n\n    const optionalScopes =\n      await adminClient.clientScopes.listDefaultOptionalClientScopes();\n    const hasOptionalScope = optionalScopes.find(\n      (optionalScope) => optionalScope.name === clientScope.name,\n    );\n\n    return hasOptionalScope ? ClientScope.optional : AllClientScopes.none;\n  }\n\n  const useTab = (tab: ClientScopeTab) =>\n    useRoutableTab(\n      toClientScope({\n        realm,\n        id,\n        tab,\n      }),\n    );\n\n  const settingsTab = useTab(\"settings\");\n  const mappersTab = useTab(\"mappers\");\n  const scopeTab = useTab(\"scope\");\n\n  const onSubmit = async (formData: ClientScopeDefaultOptionalType) => {\n    const clientScope = convertFormValuesToObject({\n      ...formData,\n      name: formData.name?.trim().replace(/ /g, \"_\"),\n    });\n\n    try {\n      await adminClient.clientScopes.update({ id }, clientScope);\n      await changeScope(adminClient, { ...clientScope, id }, clientScope.type);\n\n      addAlert(t(\"updateSuccessClientScope\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"updateErrorClientScope\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: t(\"deleteClientScope\", {\n      count: 1,\n      name: clientScope?.name,\n    }),\n    messageKey: \"deleteConfirmClientScopes\",\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.clientScopes.del({ id });\n        addAlert(t(\"deletedSuccessClientScope\"), AlertVariant.success);\n        navigate(toClientScopes({ realm }));\n      } catch (error) {\n        addError(\"deleteErrorClientScope\", error);\n      }\n    },\n  });\n\n  const assignRoles = async (rows: Row[]) => {\n    try {\n      const realmRoles = rows\n        .filter((row) => row.client === undefined)\n        .map((row) => row.role as RoleMappingPayload)\n        .flat();\n      await adminClient.clientScopes.addRealmScopeMappings(\n        {\n          id,\n        },\n        realmRoles,\n      );\n      await Promise.all(\n        rows\n          .filter((row) => row.client !== undefined)\n          .map((row) =>\n            adminClient.clientScopes.addClientScopeMappings(\n              {\n                id,\n                client: row.client!.id!,\n              },\n              [row.role as RoleMappingPayload],\n            ),\n          ),\n      );\n      addAlert(t(\"roleMappingUpdatedSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"roleMappingUpdatedError\", error);\n    }\n  };\n\n  const addMappers = async (\n    mappers: ProtocolMapperTypeRepresentation | ProtocolMapperRepresentation[],\n  ): Promise<void> => {\n    if (!Array.isArray(mappers)) {\n      const mapper = mappers as ProtocolMapperTypeRepresentation;\n      navigate(\n        toMapper({\n          realm,\n          id: clientScope!.id!,\n          mapperId: mapper.id!,\n        }),\n      );\n    } else {\n      try {\n        await adminClient.clientScopes.addMultipleProtocolMappers(\n          { id: clientScope!.id! },\n          mappers as ProtocolMapperRepresentation[],\n        );\n        refresh();\n        addAlert(t(\"mappingCreatedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"mappingCreatedError\", error);\n      }\n    }\n  };\n\n  const onDelete = async (mapper: ProtocolMapperRepresentation) => {\n    try {\n      await adminClient.clientScopes.delProtocolMapper({\n        id: clientScope!.id!,\n        mapperId: mapper.id!,\n      });\n      addAlert(t(\"mappingDeletedSuccess\"), AlertVariant.success);\n      refresh();\n    } catch (error) {\n      addError(\"mappingDeletedError\", error);\n    }\n    return true;\n  };\n\n  if (!clientScope) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={clientScope.name!}\n        dropdownItems={[\n          <DropdownItem key=\"delete\" onClick={toggleDeleteDialog}>\n            {t(\"delete\")}\n          </DropdownItem>,\n        ]}\n        badges={[{ text: clientScope.protocol }]}\n        divider={false}\n      />\n\n      <PageSection variant=\"light\" className=\"pf-v5-u-p-0\">\n        <RoutableTabs isBox>\n          <Tab\n            id=\"settings\"\n            data-testid=\"settings\"\n            title={<TabTitleText>{t(\"settings\")}</TabTitleText>}\n            {...settingsTab}\n          >\n            <PageSection variant=\"light\">\n              <ScopeForm save={onSubmit} clientScope={clientScope} />\n            </PageSection>\n          </Tab>\n          <Tab\n            id=\"mappers\"\n            data-testid=\"mappers\"\n            title={<TabTitleText>{t(\"mappers\")}</TabTitleText>}\n            {...mappersTab}\n          >\n            <MapperList\n              model={clientScope}\n              onAdd={addMappers}\n              onDelete={onDelete}\n              detailLink={(id) =>\n                toMapper({ realm, id: clientScope.id!, mapperId: id! })\n              }\n            />\n          </Tab>\n          <Tab\n            id=\"scope\"\n            data-testid=\"scopeTab\"\n            title={<TabTitleText>{t(\"scope\")}</TabTitleText>}\n            {...scopeTab}\n          >\n            {enabled && (\n              <PageSection>\n                <Alert\n                  variant=\"info\"\n                  isInline\n                  title={t(\"clientScopesRolesScope\")}\n                  component=\"h2\"\n                />\n              </PageSection>\n            )}\n            <RoleMapping\n              id={clientScope.id!}\n              name={clientScope.name!}\n              type=\"clientScopes\"\n              save={assignRoles}\n            />\n          </Tab>\n        </RoutableTabs>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["EditClientScope","adminClient","useAdminClient","t","useTranslation","navigate","useNavigate","realm","useRealm","id","useParams","addAlert","addError","useAlerts","enabled","useHelp","clientScope","setClientScope","useState","key","setKey","refresh","useFetch","determineScopeType","defaultScope","ClientScope","optionalScope","AllClientScopes","useTab","tab","useRoutableTab","toClientScope","settingsTab","mappersTab","scopeTab","onSubmit","formData","convertFormValuesToObject","changeScope","AlertVariant","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","toClientScopes","assignRoles","rows","realmRoles","row","addMappers","mappers","mapper","toMapper","onDelete","jsxs","Fragment","jsx","ViewHeader","DropdownItem","PageSection","RoutableTabs","Tab","TabTitleText","ScopeForm","MapperList","Alert","RoleMapping","KeycloakSpinner"],"mappings":"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"}