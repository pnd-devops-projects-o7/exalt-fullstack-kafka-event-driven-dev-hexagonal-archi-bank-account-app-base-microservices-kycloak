{"version":3,"file":"SamlGeneralSettings-CEo24cKw.js","sources":["../../../../../../../src/identity-providers/add/DescriptorSettings.tsx","../../../../../../../src/identity-providers/add/SamlGeneralSettings.tsx"],"sourcesContent":["import IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { ExpandableSection } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useFormContext, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  NumberControl,\n  SelectControl,\n  TextAreaControl,\n  TextControl,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { DefaultSwitchControl } from \"../../components/SwitchControl\";\n\nimport \"./discovery-settings.css\";\n\ntype DescriptorSettingsProps = {\n  readOnly: boolean;\n};\n\nconst Fields = ({ readOnly }: DescriptorSettingsProps) => {\n  const { t } = useTranslation();\n\n  const form = useFormContext<IdentityProviderRepresentation>();\n  const { control } = form;\n\n  const wantAuthnSigned = useWatch({\n    control,\n    name: \"config.wantAuthnRequestsSigned\",\n  });\n\n  const wantAssertionsEncrypted = useWatch({\n    control,\n    name: \"config.wantAssertionsEncrypted\",\n  });\n\n  const validateSignature = useWatch({\n    control,\n    name: \"config.validateSignature\",\n  });\n\n  const useMetadataDescriptorUrl = useWatch({\n    control,\n    name: \"config.useMetadataDescriptorUrl\",\n  });\n\n  const principalType = useWatch({\n    control,\n    name: \"config.principalType\",\n  });\n\n  return (\n    <div className=\"pf-v5-c-form pf-m-horizontal\">\n      <FormProvider {...form}>\n        <TextControl\n          name=\"config.entityId\"\n          label={t(\"serviceProviderEntityId\")}\n          labelIcon={t(\"serviceProviderEntityIdHelp\")}\n        />\n        <TextControl\n          name=\"config.idpEntityId\"\n          label={t(\"identityProviderEntityId\")}\n          labelIcon={t(\"identityProviderEntityIdHelp\")}\n          data-testid=\"identityProviderEntityId\"\n          id=\"kc-identity-provider-entity-id\"\n        />\n        <TextControl\n          name=\"config.singleSignOnServiceUrl\"\n          label={t(\"ssoServiceUrl\")}\n          labelIcon={t(\"ssoServiceUrlHelp\")}\n          type=\"url\"\n          readOnly={readOnly}\n          rules={{ required: t(\"required\") }}\n        />\n        <TextControl\n          name=\"config.artifactResolutionServiceUrl\"\n          label={t(\"artifactResolutionServiceUrl\")}\n          labelIcon={t(\"artifactResolutionServiceUrlHelp\")}\n          type=\"url\"\n          isDisabled={readOnly}\n        />\n        <TextControl\n          name=\"config.singleLogoutServiceUrl\"\n          label={t(\"singleLogoutServiceUrl\")}\n          labelIcon={t(\"singleLogoutServiceUrlHelp\")}\n          type=\"url\"\n          readOnly={readOnly}\n        />\n        <DefaultSwitchControl\n          name=\"config.backchannelSupported\"\n          label={t(\"backchannelLogout\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        <DefaultSwitchControl\n          name=\"config.sendIdTokenOnLogout\"\n          label={t(\"sendIdTokenOnLogout\")}\n          defaultValue={\"true\"}\n          isDisabled={readOnly}\n          stringify\n        />\n        <DefaultSwitchControl\n          name=\"config.sendClientIdOnLogout\"\n          label={t(\"sendClientIdOnLogout\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        <SelectControl\n          name=\"config.nameIDPolicyFormat\"\n          label={t(\"nameIdPolicyFormat\")}\n          labelIcon={t(\"nameIdPolicyFormatHelp\")}\n          controller={{\n            defaultValue:\n              \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\",\n          }}\n          isDisabled={readOnly}\n          options={[\n            {\n              key: \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\",\n              value: t(\"persistent\"),\n            },\n            {\n              key: \"urn:oasis:names:tc:SAML:2.0:nameid-format:transient\",\n              value: t(\"transient\"),\n            },\n            {\n              key: \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\",\n              value: t(\"email\"),\n            },\n            {\n              key: \"urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos\",\n              value: t(\"kerberos\"),\n            },\n            {\n              key: \"urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName\",\n              value: t(\"x509\"),\n            },\n            {\n              key: \"urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName\",\n              value: t(\"windowsDomainQN\"),\n            },\n            {\n              key: \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\",\n              value: t(\"unspecified\"),\n            },\n          ]}\n        />\n        <SelectControl\n          name=\"config.principalType\"\n          label={t(\"principalType\")}\n          labelIcon={t(\"principalTypeHelp\")}\n          controller={{\n            defaultValue: \"SUBJECT\",\n          }}\n          isDisabled={readOnly}\n          options={[\n            { key: \"SUBJECT\", value: t(\"subjectNameId\") },\n            { key: \"ATTRIBUTE\", value: t(\"attributeName\") },\n            { key: \"FRIENDLY_ATTRIBUTE\", value: t(\"attributeFriendlyName\") },\n          ]}\n        />\n\n        {principalType?.includes(\"ATTRIBUTE\") && (\n          <TextControl\n            name=\"config.principalAttribute\"\n            label={t(\"principalAttribute\")}\n            labelIcon={t(\"principalAttributeHelp\")}\n            readOnly={readOnly}\n          />\n        )}\n        <DefaultSwitchControl\n          name=\"config.allowCreate\"\n          label={t(\"allowCreate\")}\n          isDisabled={readOnly}\n          stringify\n        />\n\n        <DefaultSwitchControl\n          name=\"config.postBindingResponse\"\n          label={t(\"httpPostBindingResponse\")}\n          isDisabled={readOnly}\n          stringify\n        />\n\n        <DefaultSwitchControl\n          name=\"config.artifactBindingResponse\"\n          label={t(\"artifactBindingResponse\")}\n          isDisabled={readOnly}\n          stringify\n        />\n\n        <DefaultSwitchControl\n          name=\"config.postBindingAuthnRequest\"\n          label={t(\"httpPostBindingAuthnRequest\")}\n          isDisabled={readOnly}\n          stringify\n        />\n\n        <DefaultSwitchControl\n          name=\"config.postBindingLogout\"\n          label={t(\"httpPostBindingLogout\")}\n          isDisabled={readOnly}\n          stringify\n        />\n\n        <DefaultSwitchControl\n          name=\"config.wantAuthnRequestsSigned\"\n          label={t(\"wantAuthnRequestsSigned\")}\n          isDisabled={readOnly}\n          stringify\n        />\n\n        {wantAuthnSigned === \"true\" && (\n          <>\n            <SelectControl\n              name=\"config.signatureAlgorithm\"\n              label={t(\"signatureAlgorithm\")}\n              labelIcon={t(\"signatureAlgorithmHelp\")}\n              isDisabled={readOnly}\n              controller={{\n                defaultValue: \"RSA_SHA256\",\n              }}\n              options={[\n                \"RSA_SHA1\",\n                \"RSA_SHA256\",\n                \"RSA_SHA256_MGF1\",\n                \"RSA_SHA512\",\n                \"RSA_SHA512_MGF1\",\n                \"DSA_SHA1\",\n              ]}\n            />\n            <SelectControl\n              name=\"config.xmlSigKeyInfoKeyNameTransformer\"\n              label={t(\"samlSignatureKeyName\")}\n              labelIcon={t(\"samlSignatureKeyNameHelp\")}\n              isDisabled={readOnly}\n              controller={{\n                defaultValue: t(\"keyID\"),\n              }}\n              options={[\"NONE\", t(\"keyID\"), t(\"certSubject\")]}\n            />\n          </>\n        )}\n        <DefaultSwitchControl\n          name=\"config.wantAssertionsSigned\"\n          label={t(\"wantAssertionsSigned\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        <DefaultSwitchControl\n          name=\"config.wantAssertionsEncrypted\"\n          label={t(\"wantAssertionsEncrypted\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        {wantAssertionsEncrypted === \"true\" && (\n          <SelectControl\n            name=\"config.encryptionAlgorithm\"\n            label={t(\"encryptionAlgorithm\")}\n            labelIcon={t(\"encryptionAlgorithmHelp\")}\n            isDisabled={readOnly}\n            controller={{\n              defaultValue: \"RSA-OAEP\",\n            }}\n            options={[\"RSA-OAEP\", \"RSA1_5\"]}\n          />\n        )}\n\n        <DefaultSwitchControl\n          name=\"config.forceAuthn\"\n          label={t(\"forceAuthentication\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        <DefaultSwitchControl\n          name=\"config.validateSignature\"\n          label={t(\"validateSignature\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        {validateSignature === \"true\" && (\n          <>\n            <TextControl\n              name=\"config.metadataDescriptorUrl\"\n              label={t(\"metadataDescriptorUrl\")}\n              labelIcon={t(\"metadataDescriptorUrlHelp\")}\n              type=\"url\"\n              readOnly={readOnly}\n              rules={{\n                required: {\n                  value: useMetadataDescriptorUrl === \"true\",\n                  message: t(\"required\"),\n                },\n              }}\n            />\n            <DefaultSwitchControl\n              name=\"config.useMetadataDescriptorUrl\"\n              label={t(\"useMetadataDescriptorUrl\")}\n              isDisabled={readOnly}\n              stringify\n            />\n            {useMetadataDescriptorUrl !== \"true\" && (\n              <TextAreaControl\n                name=\"config.signingCertificate\"\n                label={t(\"validatingX509Certs\")}\n                labelIcon={t(\"validatingX509CertsHelp\")}\n                readOnly={readOnly}\n              />\n            )}\n          </>\n        )}\n        <DefaultSwitchControl\n          name=\"config.signSpMetadata\"\n          label={t(\"signServiceProviderMetadata\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        <DefaultSwitchControl\n          name=\"config.loginHint\"\n          label={t(\"passSubject\")}\n          isDisabled={readOnly}\n          stringify\n        />\n        <NumberControl\n          name=\"config.allowedClockSkew\"\n          label={t(\"allowedClockSkew\")}\n          labelIcon={t(\"allowedClockSkewHelp\")}\n          controller={{ defaultValue: 0, rules: { min: 0, max: 2147483 } }}\n          isDisabled={readOnly}\n        />\n        <NumberControl\n          name=\"config.attributeConsumingServiceIndex\"\n          label={t(\"attributeConsumingServiceIndex\")}\n          labelIcon={t(\"attributeConsumingServiceIndexHelp\")}\n          controller={{ defaultValue: 0, rules: { min: 0, max: 2147483 } }}\n          isDisabled={readOnly}\n        />\n        <TextControl\n          name=\"config.attributeConsumingServiceName\"\n          label={t(\"attributeConsumingServiceName\")}\n          labelIcon={t(\"attributeConsumingServiceNameHelp\")}\n          readOnly={readOnly}\n        />\n      </FormProvider>\n    </div>\n  );\n};\n\nexport const DescriptorSettings = ({ readOnly }: DescriptorSettingsProps) => {\n  const { t } = useTranslation();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return readOnly ? (\n    <ExpandableSection\n      className=\"keycloak__discovery-settings__metadata\"\n      toggleText={isExpanded ? t(\"hideMetaData\") : t(\"showMetaData\")}\n      onToggle={(_event, isOpen) => setIsExpanded(isOpen)}\n      isExpanded={isExpanded}\n    >\n      <Fields readOnly={readOnly} />\n    </ExpandableSection>\n  ) : (\n    <Fields readOnly={readOnly} />\n  );\n};\n","import {\n  HelpItem,\n  TextControl,\n  useEnvironment,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { FormGroup } from \"@patternfly/react-core\";\nimport { useFormContext, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { FormattedLink } from \"../../components/external-link/FormattedLink\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport type { Environment } from \"../../environment\";\nimport { DisplayOrder } from \"../component/DisplayOrder\";\nimport { RedirectUrl } from \"../component/RedirectUrl\";\n\nimport \"./saml-general-settings.css\";\n\ntype SamlGeneralSettingsProps = {\n  isAliasReadonly?: boolean;\n};\n\nexport const SamlGeneralSettings = ({\n  isAliasReadonly = false,\n}: SamlGeneralSettingsProps) => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const { environment } = useEnvironment<Environment>();\n\n  const { control } = useFormContext();\n  const alias = useWatch({ control, name: \"alias\" });\n\n  return (\n    <>\n      <RedirectUrl id={alias} />\n\n      <TextControl\n        name=\"alias\"\n        label={t(\"alias\")}\n        labelIcon={t(\"aliasHelp\")}\n        readOnly={isAliasReadonly}\n        rules={{\n          required: t(\"required\"),\n        }}\n      />\n\n      <TextControl name=\"displayName\" label={t(\"displayName\")} />\n      <DisplayOrder />\n      {isAliasReadonly && (\n        <FormGroup\n          label={t(\"endpoints\")}\n          fieldId=\"endpoints\"\n          labelIcon={\n            <HelpItem helpText={t(\"aliasHelp\")} fieldLabelId=\"alias\" />\n          }\n          className=\"keycloak__identity-providers__saml_link\"\n        >\n          <FormattedLink\n            title={t(\"samlEndpointsLabel\")}\n            href={`${environment.adminBaseUrl}/realms/${realm}/broker/${alias}/endpoint/descriptor`}\n            isInline\n          />\n        </FormGroup>\n      )}\n    </>\n  );\n};\n"],"names":["Fields","readOnly","t","useTranslation","form","useFormContext","control","wantAuthnSigned","useWatch","wantAssertionsEncrypted","validateSignature","useMetadataDescriptorUrl","principalType","jsxs","FormProvider","jsx","TextControl","DefaultSwitchControl","SelectControl","Fragment","TextAreaControl","NumberControl","DescriptorSettings","isExpanded","setIsExpanded","useState","ExpandableSection","_event","isOpen","SamlGeneralSettings","isAliasReadonly","realm","useRealm","environment","useEnvironment","alias","RedirectUrl","DisplayOrder","FormGroup","HelpItem","FormattedLink"],"mappings":"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"}