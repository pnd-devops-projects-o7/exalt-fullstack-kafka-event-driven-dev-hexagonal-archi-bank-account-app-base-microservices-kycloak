{"version":3,"file":"OrganizationsSection-FYZmW6Ag.js","sources":["../../../../../../../src/organizations/OrganizationsSection.tsx"],"sourcesContent":["import OrganizationRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/organizationRepresentation\";\nimport {\n  ListEmptyState,\n  OrganizationTable,\n  useAlerts,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  Button,\n  ButtonVariant,\n  PageSection,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../admin-client\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { toEditOrganization } from \"../organizations/routes/EditOrganization\";\nimport { toAddOrganization } from \"./routes/AddOrganization\";\n\nexport default function OrganizationSection() {\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const { t } = useTranslation();\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  const [selectedOrg, setSelectedOrg] = useState<OrganizationRepresentation>();\n\n  async function loader(first?: number, max?: number, search?: string) {\n    return await adminClient.organizations.find({ first, max, search });\n  }\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"organizationDelete\",\n    messageKey: \"organizationDeleteConfirm\",\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.organizations.delById({\n          id: selectedOrg!.id!,\n        });\n        addAlert(t(\"organizationDeletedSuccess\"));\n        refresh();\n      } catch (error) {\n        addError(\"organizationDeleteError\", error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <ViewHeader\n        titleKey=\"organizationsList\"\n        subKey=\"organizationsExplain\"\n        divider\n      />\n      <PageSection variant=\"light\" className=\"pf-v5-u-p-0\">\n        <DeleteConfirm />\n        <OrganizationTable\n          link={({ organization, children }) => (\n            <Link\n              key={organization.id}\n              to={toEditOrganization({\n                realm,\n                id: organization.id!,\n                tab: \"settings\",\n              })}\n            >\n              {children}\n            </Link>\n          )}\n          key={key}\n          loader={loader}\n          isPaginated\n          toolbarItem={\n            <ToolbarItem>\n              <Button\n                data-testid=\"addOrganization\"\n                component={(props) => (\n                  <Link {...props} to={toAddOrganization({ realm })} />\n                )}\n              >\n                {t(\"createOrganization\")}\n              </Button>\n            </ToolbarItem>\n          }\n          onDelete={(org) => {\n            setSelectedOrg(org);\n            toggleDeleteDialog();\n          }}\n        >\n          <ListEmptyState\n            message={t(\"emptyOrganizations\")}\n            instructions={t(\"emptyOrganizationsInstructions\")}\n            primaryActionText={t(\"createOrganization\")}\n            onPrimaryAction={() => navigate(toAddOrganization({ realm }))}\n          />\n        </OrganizationTable>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["OrganizationSection","adminClient","useAdminClient","realm","useRealm","t","useTranslation","addAlert","addError","useAlerts","navigate","useNavigate","key","setKey","useState","refresh","selectedOrg","setSelectedOrg","loader","first","max","search","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","error","jsxs","Fragment","jsx","ViewHeader","PageSection","OrganizationTable","organization","children","Link","toEditOrganization","ToolbarItem","Button","props","toAddOrganization","org","ListEmptyState"],"mappings":"qVAsBA,SAAwBA,GAAsB,CACtC,KAAA,CAAE,YAAAC,GAAgBC,IAClB,CAAE,MAAAC,GAAUC,IACZ,CAAE,EAAAC,GAAMC,IACR,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnCC,EAAWC,IAEX,CAACC,EAAKC,CAAM,EAAIC,EAAS,CAAC,EAC1BC,EAAU,IAAMF,EAAOD,EAAM,CAAC,EAE9B,CAACI,EAAaC,CAAc,EAAIH,EAAqC,EAE5D,eAAAI,EAAOC,EAAgBC,EAAcC,EAAiB,CAC5D,OAAA,MAAMpB,EAAY,cAAc,KAAK,CAAE,MAAAkB,EAAO,IAAAC,EAAK,OAAAC,EAAQ,CACpE,CAEA,KAAM,CAACC,EAAoBC,CAAa,EAAIC,EAAiB,CAC3D,SAAU,qBACV,WAAY,4BACZ,oBAAqB,SACrB,sBAAuBC,EAAc,OACrC,UAAW,SAAY,CACjB,GAAA,CACI,MAAAxB,EAAY,cAAc,QAAQ,CACtC,GAAIe,EAAa,EAAA,CAClB,EACQT,EAAAF,EAAE,4BAA4B,CAAC,EAChCU,UACDW,EAAO,CACdlB,EAAS,0BAA2BkB,CAAK,CAC3C,CACF,CAAA,CACD,EAED,OAEIC,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAA,CACC,SAAS,oBACT,OAAO,uBACP,QAAO,EAAA,CACT,EACCH,EAAAI,EAAA,CAAY,QAAQ,QAAQ,UAAU,cACrC,SAAA,CAAAF,EAACN,EAAc,EAAA,EACfM,EAACG,EAAA,CACC,KAAM,CAAC,CAAE,aAAAC,EAAc,SAAAC,CACrB,IAAAL,EAACM,EAAA,CAEC,GAAIC,EAAmB,CACrB,MAAAjC,EACA,GAAI8B,EAAa,GACjB,IAAK,UAAA,CACN,EAEA,SAAAC,CAAA,EAPID,EAAa,EAQpB,EAGF,OAAAf,EACA,YAAW,GACX,cACGmB,EACC,CAAA,SAAAR,EAACS,EAAA,CACC,cAAY,kBACZ,UAAYC,GACVV,EAACM,EAAM,CAAA,GAAGI,EAAO,GAAIC,EAAkB,CAAE,MAAArC,CAAM,CAAC,CAAG,CAAA,EAGpD,WAAE,oBAAoB,CAAA,CAAA,EAE3B,EAEF,SAAWsC,GAAQ,CACjBxB,EAAewB,CAAG,EACCnB,GACrB,EAEA,SAAAO,EAACa,EAAA,CACC,QAASrC,EAAE,oBAAoB,EAC/B,aAAcA,EAAE,gCAAgC,EAChD,kBAAmBA,EAAE,oBAAoB,EACzC,gBAAiB,IAAMK,EAAS8B,EAAkB,CAAE,MAAArC,CAAO,CAAA,CAAC,CAAA,CAC9D,CAAA,EAzBKS,CA0BP,CAAA,EACF,CACF,CAAA,CAAA,CAEJ"}