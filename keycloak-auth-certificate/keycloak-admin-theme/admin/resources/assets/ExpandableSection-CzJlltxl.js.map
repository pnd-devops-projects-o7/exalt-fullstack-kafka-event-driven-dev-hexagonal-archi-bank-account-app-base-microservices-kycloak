{"version":3,"file":"ExpandableSection-CzJlltxl.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-styles@5.4.0/node_modules/@patternfly/react-styles/css/components/ExpandableSection/expandable-section.mjs","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-tokens@5.4.0/node_modules/@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSection.js"],"sourcesContent":["import './expandable-section.css';\nexport default {\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"expandableSection\": \"pf-v5-c-expandable-section\",\n  \"expandableSectionContent\": \"pf-v5-c-expandable-section__content\",\n  \"expandableSectionToggle\": \"pf-v5-c-expandable-section__toggle\",\n  \"expandableSectionToggleIcon\": \"pf-v5-c-expandable-section__toggle-icon\",\n  \"expandableSectionToggleText\": \"pf-v5-c-expandable-section__toggle-text\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"detached\": \"pf-m-detached\",\n    \"truncate\": \"pf-m-truncate\",\n    \"limitWidth\": \"pf-m-limit-width\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"indented\": \"pf-m-indented\",\n    \"active\": \"pf-m-active\",\n    \"expandTop\": \"pf-m-expand-top\"\n  }\n};","export const c_expandable_section_m_truncate__content_LineClamp = {\n  \"name\": \"--pf-v5-c-expandable-section--m-truncate__content--LineClamp\",\n  \"value\": \"3\",\n  \"var\": \"var(--pf-v5-c-expandable-section--m-truncate__content--LineClamp)\"\n};\nexport default c_expandable_section_m_truncate__content_LineClamp;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ExpandableSection/expandable-section.mjs';\nimport { css } from '@patternfly/react-styles';\nimport lineClamp from '@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { debounce, getUniqueId } from '../../helpers/util';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport var ExpandableSectionVariant;\n(function (ExpandableSectionVariant) {\n    ExpandableSectionVariant[\"default\"] = \"default\";\n    ExpandableSectionVariant[\"truncate\"] = \"truncate\";\n})(ExpandableSectionVariant || (ExpandableSectionVariant = {}));\nconst setLineClamp = (lines, element) => {\n    if (!element || lines < 1) {\n        return;\n    }\n    element.style.setProperty(lineClamp.name, lines.toString());\n};\nclass ExpandableSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.expandableContentRef = React.createRef();\n        this.observer = () => { };\n        this.checkToggleVisibility = () => {\n            var _a;\n            if ((_a = this.expandableContentRef) === null || _a === void 0 ? void 0 : _a.current) {\n                const maxLines = this.props.truncateMaxLines || parseInt(lineClamp.value);\n                const totalLines = this.expandableContentRef.current.scrollHeight /\n                    parseInt(getComputedStyle(this.expandableContentRef.current).lineHeight);\n                this.setState({\n                    hasToggle: totalLines > maxLines\n                });\n            }\n        };\n        this.resize = () => {\n            if (this.expandableContentRef.current) {\n                const { offsetWidth } = this.expandableContentRef.current;\n                if (this.state.previousWidth !== offsetWidth) {\n                    this.setState({ previousWidth: offsetWidth });\n                    this.checkToggleVisibility();\n                }\n            }\n        };\n        this.handleResize = debounce(this.resize, 250);\n        this.state = {\n            isExpanded: props.isExpanded,\n            hasToggle: true,\n            previousWidth: undefined\n        };\n    }\n    calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded) {\n        if (propOrStateIsExpanded && toggleTextExpanded !== '') {\n            return toggleTextExpanded;\n        }\n        if (!propOrStateIsExpanded && toggleTextCollapsed !== '') {\n            return toggleTextCollapsed;\n        }\n        return toggleText;\n    }\n    componentDidMount() {\n        if (this.props.variant === ExpandableSectionVariant.truncate) {\n            const expandableContent = this.expandableContentRef.current;\n            this.setState({ previousWidth: expandableContent.offsetWidth });\n            this.observer = getResizeObserver(expandableContent, this.handleResize, false);\n            if (this.props.truncateMaxLines) {\n                setLineClamp(this.props.truncateMaxLines, expandableContent);\n            }\n            this.checkToggleVisibility();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.variant === ExpandableSectionVariant.truncate &&\n            (prevProps.truncateMaxLines !== this.props.truncateMaxLines || prevProps.children !== this.props.children)) {\n            const expandableContent = this.expandableContentRef.current;\n            setLineClamp(this.props.truncateMaxLines, expandableContent);\n            this.checkToggleVisibility();\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.variant === ExpandableSectionVariant.truncate) {\n            this.observer();\n        }\n    }\n    render() {\n        const _a = this.props, { onToggle: onToggleProp, isActive, className, toggleText, toggleTextExpanded, toggleTextCollapsed, toggleContent, children, isExpanded, isDetached, displaySize, isWidthLimited, isIndented, contentId, toggleId, variant, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        truncateMaxLines } = _a, props = __rest(_a, [\"onToggle\", \"isActive\", \"className\", \"toggleText\", \"toggleTextExpanded\", \"toggleTextCollapsed\", \"toggleContent\", \"children\", \"isExpanded\", \"isDetached\", \"displaySize\", \"isWidthLimited\", \"isIndented\", \"contentId\", \"toggleId\", \"variant\", \"truncateMaxLines\"]);\n        if (isDetached && !toggleId) {\n            /* eslint-disable no-console */\n            console.warn('ExpandableSection: The toggleId value must be passed in and must match the toggleId of the ExpandableSectionToggle.');\n        }\n        let onToggle = onToggleProp;\n        let propOrStateIsExpanded = isExpanded;\n        const uniqueContentId = contentId || getUniqueId('expandable-section-content');\n        const uniqueToggleId = toggleId || getUniqueId('expandable-section-toggle');\n        // uncontrolled\n        if (isExpanded === undefined) {\n            propOrStateIsExpanded = this.state.isExpanded;\n            onToggle = (event, isOpen) => {\n                this.setState({ isExpanded: isOpen }, () => onToggleProp(event, this.state.isExpanded));\n            };\n        }\n        const computedToggleText = this.calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded);\n        const expandableToggle = !isDetached && (React.createElement(\"button\", { className: css(styles.expandableSectionToggle), type: \"button\", \"aria-expanded\": propOrStateIsExpanded, \"aria-controls\": uniqueContentId, id: uniqueToggleId, onClick: (event) => onToggle(event, !propOrStateIsExpanded) },\n            variant !== ExpandableSectionVariant.truncate && (React.createElement(\"span\", { className: css(styles.expandableSectionToggleIcon) },\n                React.createElement(AngleRightIcon, { \"aria-hidden\": true }))),\n            React.createElement(\"span\", { className: css(styles.expandableSectionToggleText) }, toggleContent || computedToggleText)));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.expandableSection, propOrStateIsExpanded && styles.modifiers.expanded, isActive && styles.modifiers.active, isDetached && styles.modifiers.detached, displaySize === 'lg' && styles.modifiers.displayLg, isWidthLimited && styles.modifiers.limitWidth, isIndented && styles.modifiers.indented, variant === ExpandableSectionVariant.truncate && styles.modifiers.truncate, className) }, props),\n            variant === ExpandableSectionVariant.default && expandableToggle,\n            React.createElement(\"div\", { ref: this.expandableContentRef, className: css(styles.expandableSectionContent), hidden: variant !== ExpandableSectionVariant.truncate && !propOrStateIsExpanded, id: uniqueContentId, \"aria-labelledby\": uniqueToggleId, role: \"region\" }, children),\n            variant === ExpandableSectionVariant.truncate && this.state.hasToggle && expandableToggle));\n    }\n}\nExpandableSection.displayName = 'ExpandableSection';\nExpandableSection.defaultProps = {\n    className: '',\n    toggleText: '',\n    toggleTextExpanded: '',\n    toggleTextCollapsed: '',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (event, isExpanded) => undefined,\n    isActive: false,\n    isDetached: false,\n    displaySize: 'default',\n    isWidthLimited: false,\n    isIndented: false,\n    variant: 'default'\n};\nexport { ExpandableSection };\n//# sourceMappingURL=ExpandableSection.js.map"],"names":["styles","c_expandable_section_m_truncate__content_LineClamp","ExpandableSectionVariant","setLineClamp","lines","element","lineClamp","ExpandableSection","React","props","_a","maxLines","totalLines","offsetWidth","debounce","toggleText","toggleTextExpanded","toggleTextCollapsed","propOrStateIsExpanded","expandableContent","getResizeObserver","prevProps","onToggleProp","isActive","className","toggleContent","children","isExpanded","isDetached","displaySize","isWidthLimited","isIndented","contentId","toggleId","variant","truncateMaxLines","__rest","onToggle","uniqueContentId","getUniqueId","uniqueToggleId","event","isOpen","computedToggleText","expandableToggle","css","AngleRightIcon"],"mappings":"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","x_google_ignoreList":[0,1,2]}