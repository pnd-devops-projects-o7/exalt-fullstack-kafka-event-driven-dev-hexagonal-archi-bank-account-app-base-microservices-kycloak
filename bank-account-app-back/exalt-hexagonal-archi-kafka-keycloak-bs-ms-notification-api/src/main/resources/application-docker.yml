#file: noinspection SpringBootApplicationYaml
spring:
  application:
    name: ${NOTIFICATION_API_APP_NAME}

  main:
    banner-mode: off
  # kafka consumer
  kafka:
    consumer:
      bootstrap-servers: http://kafka-server1:19092,http://kafka-server2:29092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        specific:
          avro:
            reader: true
    properties:
      schema:
        registry:
          url: http://schema-registry-service:8081
# send mail for notification
notification:
  mail:
    sender:
      ip-address: ${MAIL_SERVER_HOST_IP_ADDRESS}
      port1: ${MAIL_SERVER_HOST_PORT1}
      port2: ${MAIL_SERVER_HOST_PORT2}
      user: ${MAIL_SERVER_USERNAME}
      password: ${MAIL_SERVER_PASSWORD}
      protocol: ${MAIL_SENDER_PROTOCOL}

server:
  port: ${NOTIFICATION_API_SERVER_PORT}

eureka:
  client:
    service-url:
      defaultZone:  http://${SERVICE_REGISTRY_API_APP_NAME}:${SERVICE_REGISTRY_API_SERVER_PORT}/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      probes:
        enabled: true
      show-components: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
# topics from where consumer read event
kafka:
  topics:
    topic1: ${CUSTOMER_TOPIC_NAME}
    topic2: ${ACCOUNT_TOPIC_NAME1}
    topic3: ${ACCOUNT_TOPIC_NAME2}
    topic4: ${OPERATION_TOPIC1_NAME}
    topic5: ${OPERATION_TOPIC2_NAME}