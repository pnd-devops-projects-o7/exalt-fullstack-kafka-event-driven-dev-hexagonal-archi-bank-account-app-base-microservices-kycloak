/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Operation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6810532049135754262L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Operation\",\"namespace\":\"com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations\",\"fields\":[{\"name\":\"operationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"operationType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transactionAmount\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.math.BigDecimal\",\"precision\":7,\"scale\":3}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"bankAccount\",\"type\":{\"type\":\"record\",\"name\":\"BankAccount\",\"namespace\":\"com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies\",\"fields\":[{\"name\":\"accountId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"accountState\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"balance\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"java-class\":\"java.math.BigDecimal\",\"precision\":7,\"scale\":3}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"overdraft\",\"type\":\"double\"},{\"name\":\"interestRate\",\"type\":\"double\"},{\"name\":\"customer\",\"type\":{\"type\":\"record\",\"name\":\"Customer\",\"fields\":[{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"firstname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customerState\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Operation> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Operation> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Operation> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Operation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Operation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Operation to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Operation from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Operation instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Operation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String operationId;
  private java.lang.String operationType;
  private java.math.BigDecimal transactionAmount;
  private java.time.Instant createdAt;
  private java.lang.String description;
  private com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount bankAccount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Operation() {}

  /**
   * All-args constructor.
   * @param operationId The new value for operationId
   * @param operationType The new value for operationType
   * @param transactionAmount The new value for transactionAmount
   * @param createdAt The new value for createdAt
   * @param description The new value for description
   * @param bankAccount The new value for bankAccount
   */
  public Operation(java.lang.String operationId, java.lang.String operationType, java.math.BigDecimal transactionAmount, java.time.Instant createdAt, java.lang.String description, com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount bankAccount) {
    this.operationId = operationId;
    this.operationType = operationType;
    this.transactionAmount = transactionAmount;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.description = description;
    this.bankAccount = bankAccount;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return operationId;
    case 1: return operationType;
    case 2: return transactionAmount;
    case 3: return createdAt;
    case 4: return description;
    case 5: return bankAccount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: operationId = value$ != null ? value$.toString() : null; break;
    case 1: operationType = value$ != null ? value$.toString() : null; break;
    case 2: transactionAmount = (java.math.BigDecimal)value$; break;
    case 3: createdAt = (java.time.Instant)value$; break;
    case 4: description = value$ != null ? value$.toString() : null; break;
    case 5: bankAccount = (com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'operationId' field.
   * @return The value of the 'operationId' field.
   */
  public java.lang.String getOperationId() {
    return operationId;
  }


  /**
   * Sets the value of the 'operationId' field.
   * @param value the value to set.
   */
  public void setOperationId(java.lang.String value) {
    this.operationId = value;
  }

  /**
   * Gets the value of the 'operationType' field.
   * @return The value of the 'operationType' field.
   */
  public java.lang.String getOperationType() {
    return operationType;
  }


  /**
   * Sets the value of the 'operationType' field.
   * @param value the value to set.
   */
  public void setOperationType(java.lang.String value) {
    this.operationType = value;
  }

  /**
   * Gets the value of the 'transactionAmount' field.
   * @return The value of the 'transactionAmount' field.
   */
  public java.math.BigDecimal getTransactionAmount() {
    return transactionAmount;
  }


  /**
   * Sets the value of the 'transactionAmount' field.
   * @param value the value to set.
   */
  public void setTransactionAmount(java.math.BigDecimal value) {
    this.transactionAmount = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'bankAccount' field.
   * @return The value of the 'bankAccount' field.
   */
  public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount getBankAccount() {
    return bankAccount;
  }


  /**
   * Sets the value of the 'bankAccount' field.
   * @param value the value to set.
   */
  public void setBankAccount(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount value) {
    this.bankAccount = value;
  }

  /**
   * Creates a new Operation RecordBuilder.
   * @return A new Operation RecordBuilder
   */
  public static com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder newBuilder() {
    return new com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder();
  }

  /**
   * Creates a new Operation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Operation RecordBuilder
   */
  public static com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder newBuilder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder other) {
    if (other == null) {
      return new com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder();
    } else {
      return new com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder(other);
    }
  }

  /**
   * Creates a new Operation RecordBuilder by copying an existing Operation instance.
   * @param other The existing instance to copy.
   * @return A new Operation RecordBuilder
   */
  public static com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder newBuilder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation other) {
    if (other == null) {
      return new com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder();
    } else {
      return new com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder(other);
    }
  }

  /**
   * RecordBuilder for Operation instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Operation>
    implements org.apache.avro.data.RecordBuilder<Operation> {

    private java.lang.String operationId;
    private java.lang.String operationType;
    private java.math.BigDecimal transactionAmount;
    private java.time.Instant createdAt;
    private java.lang.String description;
    private com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount bankAccount;
    private com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount.Builder bankAccountBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.operationId)) {
        this.operationId = data().deepCopy(fields()[0].schema(), other.operationId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.operationType)) {
        this.operationType = data().deepCopy(fields()[1].schema(), other.operationType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.transactionAmount)) {
        this.transactionAmount = data().deepCopy(fields()[2].schema(), other.transactionAmount);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.bankAccount)) {
        this.bankAccount = data().deepCopy(fields()[5].schema(), other.bankAccount);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasBankAccountBuilder()) {
        this.bankAccountBuilder = com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount.newBuilder(other.getBankAccountBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Operation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.operationId)) {
        this.operationId = data().deepCopy(fields()[0].schema(), other.operationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.operationType)) {
        this.operationType = data().deepCopy(fields()[1].schema(), other.operationType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.transactionAmount)) {
        this.transactionAmount = data().deepCopy(fields()[2].schema(), other.transactionAmount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bankAccount)) {
        this.bankAccount = data().deepCopy(fields()[5].schema(), other.bankAccount);
        fieldSetFlags()[5] = true;
      }
      this.bankAccountBuilder = null;
    }

    /**
      * Gets the value of the 'operationId' field.
      * @return The value.
      */
    public java.lang.String getOperationId() {
      return operationId;
    }


    /**
      * Sets the value of the 'operationId' field.
      * @param value The value of 'operationId'.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setOperationId(java.lang.String value) {
      validate(fields()[0], value);
      this.operationId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'operationId' field has been set.
      * @return True if the 'operationId' field has been set, false otherwise.
      */
    public boolean hasOperationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'operationId' field.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder clearOperationId() {
      operationId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'operationType' field.
      * @return The value.
      */
    public java.lang.String getOperationType() {
      return operationType;
    }


    /**
      * Sets the value of the 'operationType' field.
      * @param value The value of 'operationType'.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setOperationType(java.lang.String value) {
      validate(fields()[1], value);
      this.operationType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'operationType' field has been set.
      * @return True if the 'operationType' field has been set, false otherwise.
      */
    public boolean hasOperationType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'operationType' field.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder clearOperationType() {
      operationType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionAmount' field.
      * @return The value.
      */
    public java.math.BigDecimal getTransactionAmount() {
      return transactionAmount;
    }


    /**
      * Sets the value of the 'transactionAmount' field.
      * @param value The value of 'transactionAmount'.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setTransactionAmount(java.math.BigDecimal value) {
      validate(fields()[2], value);
      this.transactionAmount = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionAmount' field has been set.
      * @return True if the 'transactionAmount' field has been set, false otherwise.
      */
    public boolean hasTransactionAmount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'transactionAmount' field.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder clearTransactionAmount() {
      transactionAmount = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[3], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder clearCreatedAt() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setDescription(java.lang.String value) {
      validate(fields()[4], value);
      this.description = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder clearDescription() {
      description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bankAccount' field.
      * @return The value.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount getBankAccount() {
      return bankAccount;
    }


    /**
      * Sets the value of the 'bankAccount' field.
      * @param value The value of 'bankAccount'.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setBankAccount(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount value) {
      validate(fields()[5], value);
      this.bankAccountBuilder = null;
      this.bankAccount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bankAccount' field has been set.
      * @return True if the 'bankAccount' field has been set, false otherwise.
      */
    public boolean hasBankAccount() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'bankAccount' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount.Builder getBankAccountBuilder() {
      if (bankAccountBuilder == null) {
        if (hasBankAccount()) {
          setBankAccountBuilder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount.newBuilder(bankAccount));
        } else {
          setBankAccountBuilder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount.newBuilder());
        }
      }
      return bankAccountBuilder;
    }

    /**
     * Sets the Builder instance for the 'bankAccount' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder setBankAccountBuilder(com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount.Builder value) {
      clearBankAccount();
      bankAccountBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'bankAccount' field has an active Builder instance
     * @return True if the 'bankAccount' field has an active Builder instance
     */
    public boolean hasBankAccountBuilder() {
      return bankAccountBuilder != null;
    }

    /**
      * Clears the value of the 'bankAccount' field.
      * @return This builder.
      */
    public com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.Operation.Builder clearBankAccount() {
      bankAccount = null;
      bankAccountBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Operation build() {
      try {
        Operation record = new Operation();
        record.operationId = fieldSetFlags()[0] ? this.operationId : (java.lang.String) defaultValue(fields()[0]);
        record.operationType = fieldSetFlags()[1] ? this.operationType : (java.lang.String) defaultValue(fields()[1]);
        record.transactionAmount = fieldSetFlags()[2] ? this.transactionAmount : (java.math.BigDecimal) defaultValue(fields()[2]);
        record.createdAt = fieldSetFlags()[3] ? this.createdAt : (java.time.Instant) defaultValue(fields()[3]);
        record.description = fieldSetFlags()[4] ? this.description : (java.lang.String) defaultValue(fields()[4]);
        if (bankAccountBuilder != null) {
          try {
            record.bankAccount = this.bankAccountBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("bankAccount"));
            throw e;
          }
        } else {
          record.bankAccount = fieldSetFlags()[5] ? this.bankAccount : (com.exalt.exalthexagonalarchikafkakeycloakbsmsoperationapi.domain.avro_beans.operations.dependencies.BankAccount) defaultValue(fields()[5]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Operation>
    WRITER$ = (org.apache.avro.io.DatumWriter<Operation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Operation>
    READER$ = (org.apache.avro.io.DatumReader<Operation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










